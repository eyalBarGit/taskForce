{"version":3,"sources":["assets/images/bgs sync /^/.*/.jpg$","assets/images/bgs/boraBora.jpg","assets/images/bgs/lake.jpg","assets/images/bgs/mountains.jpg","assets/images/bgs/purple_nature.jpg","assets/images/bgs/sky.jpg","assets/images/bgs/water.jpg","assets/images/bgs/pink.jpg","history.js","cmps/BoardList/BoardList.jsx","service/utils.js","service/boardService.js","store/actions/boardActions.js","cmps/ActionForm/ActionForm.jsx","pages/HomePage/HomePage.jsx","store/actions/headerActions.js","cmps/CardDetails/DeleteVerify/DeleteVerify.jsx","cmps/AppHeader/AppHeaderMenu/AppHeaderMenu.jsx","cmps/AppHeader/BoardsMenu/BoardsMenu.jsx","cmps/AppHeader/AppHeader.jsx","cmps/CardDetails/CardLabel/CardLabel.jsx","cmps/CardPreview/CardPreview.jsx","service/cardService.js","store/actions/cardActions.js","cmps/CardList/CardList.jsx","service/listService.js","store/actions/listActions.js","cmps/AddCard/AddCard.jsx","cmps/ListMenu/ListMenu.jsx","cmps/ChangeListTitle/ChangeListTitle.jsx","cmps/ListMenu/MoveList/MoveList.jsx","cmps/List/List.jsx","cmps/BoardBackground/BoardBackground.jsx","cmps/CardDetails/BlackScreen/BlackScreen.jsx","cmps/CardDetails/CardCover/CardCover.jsx","cmps/CardDetails/CopyCard/CopyCard.jsx","cmps/CardDetails/MoveCard/MoveCard.jsx","cmps/ColorPallette/ColorPallette.jsx","cmps/CardDetails/CardCoverMenu/CardCoverMenu.jsx","cmps/CardDetails/RightSideMenu/AddCheckList/AddCheckList.jsx","cmps/CardDetails/LabelsMenu/LabelsMenu.jsx","cmps/CardDetails/RightSideMenu/RightSideMenu.jsx","cmps/ProgressBar/ProgressBar.jsx","cmps/CardDetails/CardCheckList/ItemPreview/ItemPreview.jsx","cmps/CardDetails/CardCheckList/CardCheckList.jsx","cmps/CardDetails/Description/AddDescription/AddDescription.jsx","cmps/CardDetails/Description/Description.jsx","cmps/CardDetails/CardDetails.jsx","cmps/AddList/AddList.jsx","cmps/Board/Board.jsx","App.js","serviceWorker.js","data/boards.js","store/reducers/boardReducer.js","store/reducers/index.js","store/store.js","index.js"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","history","createBrowserHistory","BoardList","mainStore","useSelector","state","boards","favBoards","useState","boardList","setBoardList","getAllBoards","useCallback","allBoards","board","currBoard","push","init","useEffect","className","key","to","alt","src","require","backgroundImg","name","generatePassword","length","charset","retVal","i","n","charAt","Math","floor","random","loadFromStorage","val","localStorage","getItem","JSON","parse","getRandomIntInclusive","min","max","ceil","saveToStorage","setItem","stringify","store","UTILS","createBoard","boardName","isFav","cards","lists","listOrder","navBarTheme","createdAt","Date","toLocaleDateString","createCard","title","content","createList","cardIds","dragOutsideList","start","source","destination","draggableId","finish","startCardIds","splice","index","newStartList","finishCardIds","newFinishList","updateList","newCardIds","Array","from","dragList","newListOrder","dispatch","a","service","newBoard","_createBoard","removeSavedBoard","type","boardToRemove","changeBoardBackground","bgName","_changeBoardBg","setActiveBoard","boardId","activeBoard","_dragInsideList","data","_dragOutsideList","_dragList","_createList","_changeBoardName","ActionForm","currRef","placeholder","onSubmitFunc","toggleAdd","useForm","register","handleSubmit","current","focus","onSubmit","style","resize","ref","autoComplete","onClick","HomePage","useParams","useDispatch","isAddBoardVis","setAddBoardVis","boardRef","useRef","onToggleAddBoard","boardTitle","DeleteVerify","onDelete","onToggle","itemToDelete","AppHeaderMenu","onRemoveSavedBoard","onToggleAppHeaderMenu","useHistory","isChangeNameVis","setChangeName","isAddListVisible","setAddListVisibility","isDeleteVerify","setDeleteVerify","onToggleAddList","onToggleBoardName","onToggleDleteBoard","changeBoardName","boardToDelete","listName","listTitle","boardService","newList","BoardsMenu","closeBoard","boardid","check","icon","faCheck","width","AppHeader","setTheme","bottomNav","isBgBoardOpen","setIsBgBoardOpen","isHeaderMenuVisible","setHeaderMenu","showSavedTitle","setSaved","isBoardsMenuVis","setBoardsMenuVis","home","faHome","faBorderAll","plusSign","faPlus","star","faStar","onHideSave","savedBoard","favoriteBoard","setTimeout","CardLabel","label","backgroundColor","CardPreview","cardid","currCard","pencil","faPencilAlt","checklist","faTasks","clock","faClock","eye","faEye","clipBoard","faClipboardList","provided","snapshot","MainContainer","draggableProps","dragHandleProps","innerRef","isDragging","cardCover","labels","isWatched","dueDate","fontSize","substring","desc","styled","div","deleteCard","currList","cardId","filter","cardsId","copyCard","cardToCopy","newCard","createCheckList","checkListName","list","createCheckListItem","itemName","text","isChecked","removeLabel","labelIndex","toggleCardDetails","isCardDetailShown","checkItem","currCheckList","currItem","_toggleCheckItem","setCardCover","color","_setCardCover","setDueDate","_setDueDate","_changeCardTitle","_setCardDesc","_addChecklist","_removeCheckList","_addCheckListItem","_removeCheckListItem","_toggleCardWatch","_setLabel","_updateLabels","CardList","currListID","onToggleCardDetails","listId","idx","_deleteCards","cardID","newBoardCards","newLists","currListCardIds","forEach","listToCopy","copiedListTitle","matchingCards","newCards","cardIdsToCopy","_findMatchingCards","card","cardCopy","findIndex","element","end","copiedList","copiedCards","cardsToCopy","allCards","cardService","deleteList","cardTitle","description","copyList","getListCards","currCards","listService","updatedData","_deleteList","_createCard","_copyList","_moveList","_changeListName","AddCard","toggleAddCard","reset","ListMenu","toggleListMenu","toggleEditTitle","onToggleMoveList","clicked","window","addEventListener","removeEventListener","newListCopy","ChangeListTitle","changeListName","newTitle","MoveList","values","moveToBoard","setMoveTo","onChange","moveToBoardId","target","value","listToMove","currListCards","moveList","List","setCurrList","isAddCardShown","setAddCard","isListMenuShown","setListMenu","isEditTitle","setIsEditTitle","isMoveListVisible","setMoveList","plus","listMenu","faEllipsisH","getCurrList","onToggleAddCard","onToggleListMenu","MainDragContainer","droppableId","MainDropContainer","droppableProps","BoardBackground","toggleBgBoard","close","faTimes","changeBackgroundImg","nature","mountains","water","lake","boraBora","sky","BlackScreen","props","CardCover","CopyCard","onToggleCopyCard","listOptions","setListOptions","onCopyCard","copyToList","copiedCard","copyToListID","MoveCard","onToggleMoveCard","onMoveCard","moveToList","moveTocardIds","includes","moveToListID","moveCard","ColorPallette","onSelectColor","onToggleColor","CardCoverMenu","toggleCardVisibility","onCloseCover","onCloseColor","AddCheckList","onToggleCheckList","onAddCheckList","checklistName","marginBlockEnd","LabelsMenu","onSetLabel","RightSideMenu","onToggleCover","isCoverOn","listid","onToggleCardWatch","isCopyClicked","setCopyClick","isMoveClicked","setMoveClick","isDeleteClicked","setDeleteClick","isAddCheckList","setAddChecklist","isLabelMenuVis","setLabelMenuVis","date","setDates","isCalShown","toggleShowCal","avatar","faUser","faTag","paperClip","faPaperclip","arrow","faArrowRight","copy","faCopy","trash","faTrashAlt","share","faShareAlt","cover","faColumns","onToggleLabelMenu","onToggleDeleteCard","colorCode","newLabelList","labelColor","setLabel","newChecklist","currChecklist","newDate","toString","ProgressBar","bgcolor","completed","fillerStyles","borderRadius","textAlign","fontWeight","ItemPreview","onCheckItem","item","onRemoveCheckListItem","checked","CardCheckList","isAddItemVisible","setItemVisible","checkedItems","setCheckItems","currCheckItem","setCurrCheckItem","setCompleted","checkedItem","itemToRemove","removeCheckListItem","newCheckedItems","onToggleItemVisibility","calculatePercentage","numberOfCheckLists","percent","isNaN","toFixed","updatePercentageOnMount","checkListToRemove","removeCheckList","listItem","newItem","addCheckListItem","AddDescription","onToggleCardDesc","setCardDesc","defaultValue","cols","rows","Description","isDescVisible","CardDetails","setCoverOn","istCoverVisibile","setCoverVisibility","setDescVisibility","newCardTitle","setCardTitle","isCardTitleChange","onSetCardTitle","isMouseOver","setMouseOver","ticket","faTicketAlt","height","onMouseEnter","onMouseLeave","ev","preventDefault","changeCardTitle","prevState","toggleCardWatch","AddList","Board","isBgSideOpen","setAddList","setCurrBoard","loadCurrBoard","onDragEnd","result","res","updatedList","dragInsideList","direction","MainDndArea","App","component","exact","path","Boolean","location","hostname","match","initialState","hasOwnProperty","rootReducer","combineReducers","action","newBoards","isItemChecked","newChecklistToSave","currListId","newFavBoards","console","log","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","Store","createStore","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.18a9212f.chunk.js","sourcesContent":["var map = {\n\t\"./boraBora.jpg\": 31,\n\t\"./lake.jpg\": 32,\n\t\"./mountains.jpg\": 33,\n\t\"./pink.jpg\": 62,\n\t\"./purple_nature.jpg\": 34,\n\t\"./sky.jpg\": 35,\n\t\"./water.jpg\": 36\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 29;","module.exports = __webpack_public_path__ + \"static/media/boraBora.989f4a87.jpg\";","module.exports = __webpack_public_path__ + \"static/media/lake.c140c866.jpg\";","module.exports = __webpack_public_path__ + \"static/media/mountains.736266ce.jpg\";","module.exports = __webpack_public_path__ + \"static/media/purple_nature.72bb8802.jpg\";","module.exports = __webpack_public_path__ + \"static/media/sky.cc4c0d26.jpg\";","module.exports = __webpack_public_path__ + \"static/media/water.d264abfb.jpg\";","module.exports = __webpack_public_path__ + \"static/media/pink.7e9ebd14.jpg\";","import { createBrowserHistory } from \"history\";\r\nconst history = createBrowserHistory();\r\n\r\nexport default history;","import React, { useState, useEffect, useCallback } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\n\r\n\r\nexport function BoardList() {\r\n    const mainStore = useSelector(state => state.mainStore)\r\n    const { boards, favBoards } = mainStore\r\n    const [boardList, setBoardList] = useState('')\r\n\r\n\r\n\r\n    const getAllBoards = useCallback(\r\n        () => {\r\n            const allBoards = []\r\n            for (const board in boards) {\r\n                const currBoard = boards[board];\r\n                allBoards.push(currBoard)\r\n            }\r\n            return allBoards\r\n        },\r\n        [boards],\r\n    )\r\n\r\n\r\n    const init = useCallback(() => {\r\n        setBoardList(getAllBoards())\r\n    },\r\n        [getAllBoards],\r\n    )\r\n\r\n\r\n    useEffect(() => {\r\n        init()\r\n    }, [init])\r\n\r\n\r\n\r\n    if (!boardList) return 'LOADING...'\r\n    return (\r\n        <div className=\"board-list \">\r\n            <h2>All Boards</h2>\r\n            <div className=\"board-list-container justify-center flex wrap\">\r\n                {boardList.map(board => {\r\n                    return <div className=\"container margin-center flex\" key={board.id}>\r\n                        <div className=\"boards flex\">\r\n                            <Link to={`boards/${board.id}`}><img\r\n                                alt=\"board\"\r\n                                src={require(`../../assets/images/bgs/${board.backgroundImg}.jpg`)}></img>\r\n                                <p>{board.name}</p>\r\n                            </Link>\r\n                        </div>\r\n                    </div>\r\n                })}\r\n            </div>\r\n            <div className=\"fav-boards \">\r\n                <h2>Favorite Boards</h2>\r\n                <div className=\"fav-boards-container flex wrap\">\r\n                    {favBoards && favBoards.map(board => {\r\n                        const currBoard = boards[board]\r\n                        return <div className=\"container margin-center \" key={board}>\r\n                            <div className=\"boards flex \">\r\n                                <Link to={`boards/${board}`}>\r\n                                    <img\r\n                                        alt=\"boards\"\r\n                                        src={require(`../../assets/images/bgs/${currBoard.backgroundImg}.jpg`)}></img>\r\n                                    <p>{currBoard.name}</p>\r\n                                </Link>\r\n                            </div>\r\n                        </div>\r\n                    })}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n","\r\nfunction getRandomIntInclusive(min, max) {\r\n    min = Math.ceil(min);\r\n    max = Math.floor(max);\r\n    const final = Math.floor(Math.random() * (max - min + 1)) + min;\r\n    return final\r\n}\r\n\r\nfunction generatePassword(length) {\r\n    var charset = \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789\",\r\n        retVal = \"\";\r\n    for (var i = 0, n = charset.length; i < length; ++i) {\r\n        retVal += charset.charAt(Math.floor(Math.random() * n));\r\n    }\r\n    return retVal;\r\n}\r\n\r\nfunction saveToStorage(key, val) {\r\n    localStorage.setItem(key, JSON.stringify(val))\r\n}\r\n\r\nfunction loadFromStorage(key) {\r\n    var val = localStorage.getItem(key)\r\n    return JSON.parse(val)\r\n}\r\nexport default {\r\n    generatePassword,\r\n    loadFromStorage,\r\n    getRandomIntInclusive,\r\n    saveToStorage,\r\n}\r\n","// const UTILS = require('./utils')\r\nimport UTILS from './utils'\r\nconst KEY = 'mainStore'\r\n\r\nfunction createBoard(boardName) {\r\n  return {\r\n    id: UTILS.generatePassword(4),\r\n    name: boardName,\r\n    isFav: false,\r\n    cards: {\r\n\r\n    },\r\n    lists: {\r\n\r\n    },\r\n    listOrder: [],\r\n    backgroundImg: 'sky',\r\n    navBarTheme: 'bright',\r\n    createdAt: new Date().toLocaleDateString()\r\n\r\n  }\r\n\r\n\r\n}\r\n\r\nfunction createCard(title) {\r\n  return {\r\n    id: UTILS.generatePassword(5),\r\n    title: title,\r\n    content: '',\r\n    createdAt: new Date().toLocaleDateString()\r\n  }\r\n\r\n}\r\n\r\nfunction createList(title) {\r\n  return {\r\n    id: UTILS.generatePassword(6),\r\n    title: title,\r\n    cardIds: [],\r\n    createdAt: new Date().toLocaleDateString()\r\n  }\r\n}\r\n\r\nfunction saveToStorage(store) {\r\n\r\n  UTILS.saveToStorage(KEY, store)\r\n\r\n}\r\n\r\nfunction updateList(start, source, destination, draggableId) {\r\n  const newCardIds = Array.from(start.cardIds)\r\n  newCardIds.splice(source.index, 1)\r\n  newCardIds.splice(destination.index, 0, draggableId)\r\n  const updatedList = {\r\n    ...start,\r\n    cardIds: newCardIds\r\n  }\r\n  return updatedList\r\n\r\n}\r\n\r\nfunction dragOutsideList(start, source, destination, draggableId, finish) {\r\n  const startCardIds = start.cardIds\r\n  startCardIds.splice(source.index, 1);\r\n\r\n  const newStartList = {\r\n    ...start,\r\n    cardIds: startCardIds\r\n  }\r\n\r\n  const finishCardIds = finish.cardIds\r\n  finishCardIds.splice(destination.index, 0, draggableId);\r\n  const newFinishList = {\r\n    ...finish,\r\n    cardIds: finishCardIds\r\n  }\r\n  return {\r\n    newStartList: newStartList,\r\n    newFinishList: newFinishList\r\n  }\r\n\r\n}\r\nfunction dragList(source, destination, draggableId, currBoard) {\r\n  const newListOrder = currBoard.listOrder\r\n  newListOrder.splice(source.index, 1)\r\n  newListOrder.splice(destination.index, 0, draggableId)\r\n  return newListOrder\r\n\r\n}\r\n\r\n\r\nexport default {\r\n  saveToStorage,\r\n  createBoard,\r\n  createCard,\r\n  createList,\r\n  dragOutsideList,\r\n  updateList,\r\n  dragList\r\n}\r\n","import service from '../../service/boardService'\r\n\r\n\r\nexport function dragInsideList(start, source, destination, draggableId, currBoard) {\r\n    return async dispatch => {\r\n        try {\r\n            const updatedList = await service.updateList(start, source, destination, draggableId)\r\n            const data = {\r\n                updatedList: updatedList,\r\n                currBoard: currBoard\r\n            }\r\n            dispatch(_dragInsideList(data));\r\n\r\n        }\r\n        catch (err) {\r\n            throw err\r\n        }\r\n    }\r\n}\r\nexport function dragOutsideList(start, source, destination, draggableId, currBoard, finish) {\r\n    return async dispatch => {\r\n        try {\r\n            const res = await service.dragOutsideList(start, source, destination, draggableId, finish)\r\n            const data = {\r\n                newStartList: res.newStartList,\r\n                newFinishList: res.newFinishList,\r\n                currBoard: currBoard\r\n            }\r\n            dispatch(_dragOutsideList(data));\r\n\r\n        }\r\n        catch (err) {\r\n            throw err\r\n        }\r\n    }\r\n}\r\nexport function dragList(source, destination, draggableId, currBoard) {\r\n    return async dispatch => {\r\n        try {\r\n            const newListOrder = await service.dragList(source, destination, draggableId, currBoard)\r\n            const data = {\r\n                newListOrder: newListOrder,\r\n                currBoard: currBoard\r\n            }\r\n            dispatch(_dragList(data));\r\n        }\r\n        catch (err) {\r\n            throw err\r\n        }\r\n    }\r\n}\r\n\r\nexport function createBoard(boardName = \"New Board\") {\r\n    return async dispatch => {\r\n        try {\r\n            const newBoard = await service.createBoard(boardName)\r\n            const data = {\r\n                newBoard: newBoard,\r\n            }\r\n            dispatch(_createBoard(data))\r\n        }\r\n        catch (err) {\r\n            throw err\r\n        }\r\n    }\r\n}\r\nexport function deleteBoard(boardToDelete) {\r\n    return async dispatch => {\r\n        try {\r\n\r\n            dispatch(_deleteBoard(boardToDelete))\r\n        }\r\n        catch (err) {\r\n            throw err\r\n        }\r\n    }\r\n}\r\n\r\nexport function changeBoardName(currBoard, boardName) {\r\n    return async dispatch => {\r\n        try {\r\n            const data = {\r\n                currBoard: currBoard,\r\n                boardName: boardName\r\n            }\r\n            dispatch(_changeBoardName(data))\r\n        }\r\n        catch (err) {\r\n            throw err\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport function createList(currBoard, listName) {\r\n    return async dispatch => {\r\n        try {\r\n            const newList = await service.createList(listName)\r\n            const data = {\r\n                newList: newList,\r\n                currBoard: currBoard\r\n            }\r\n            dispatch(_createList(data))\r\n\r\n        }\r\n        catch (err) {\r\n            throw err\r\n        }\r\n    }\r\n}\r\n\r\nexport function favoriteBoard(currBoard) {\r\n    return async dispatch => {\r\n        try {\r\n            dispatch(_favoriteBoard(currBoard))\r\n        }\r\n        catch (err) {\r\n            throw err\r\n        }\r\n    }\r\n}\r\n\r\nexport function removeSavedBoard(currBoard) {\r\n    return async dispatch => {\r\n        try {\r\n            dispatch(_removeSavedBoard(currBoard))\r\n        }\r\n        catch (err) {\r\n            throw err\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport function changeBoardBackground(currBoard, bgName) {\r\n    return async dispatch => {\r\n        try {\r\n            const data = {\r\n                bgName: bgName,\r\n                currBoard: currBoard\r\n            }\r\n            dispatch(_changeBoardBg(data))\r\n\r\n        }\r\n        catch (err) {\r\n            throw err\r\n        }\r\n    }\r\n}\r\n\r\nexport function toggleBgSide() {\r\n    return async dispatch => {\r\n        try {\r\n            dispatch(_toggleBgSide());\r\n\r\n        }\r\n        catch (err) {\r\n            throw err\r\n        }\r\n    }\r\n}\r\n\r\n\r\n\r\nexport function setActiveBoard(boardId) {\r\n    return async dispatch => {\r\n        try {\r\n            dispatch(_setActiveBoard(boardId))\r\n\r\n        }\r\n        catch (err) {\r\n            throw err\r\n        }\r\n    }\r\n}\r\nexport function saveToStorage(store) {\r\n    return async dispatch => {\r\n        try {\r\n            await service.saveToStorage(store)\r\n\r\n        }\r\n        catch (err) {\r\n            throw err\r\n        }\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nfunction _setActiveBoard(activeBoard) {\r\n    return {\r\n        type: 'SET_ACTIVE_BOARD',\r\n        activeBoard\r\n    }\r\n}\r\n\r\n\r\nfunction _dragInsideList(data) {\r\n    return {\r\n        type: 'UPDATE_LIST',\r\n        data\r\n    }\r\n}\r\nfunction _dragOutsideList(data) {\r\n    return {\r\n        type: 'UPDATE_LISTS',\r\n        data\r\n    }\r\n}\r\nfunction _dragList(data) {\r\n    return {\r\n        type: 'UPDATE_LISTS_ORDER',\r\n        data\r\n    }\r\n}\r\nfunction _createList(data) {\r\n\r\n    return {\r\n        type: 'CREATE_LIST',\r\n        data\r\n    }\r\n}\r\nfunction _changeBoardBg(data) {\r\n    return {\r\n        type: 'CHANGE_BOARD_BG',\r\n        data\r\n    }\r\n}\r\n\r\nfunction _toggleBgSide() {\r\n    return {\r\n        type: 'TOGGLE_BG_SIDE',\r\n    }\r\n}\r\nfunction _favoriteBoard(savedBoard) {\r\n    return {\r\n        type: 'TOGGLE_FAV_BOARD',\r\n        savedBoard\r\n    }\r\n}\r\nfunction _removeSavedBoard(boardToRemove) {\r\n    return {\r\n        type: 'REMOVE_SAVED_BOARD',\r\n        boardToRemove\r\n    }\r\n}\r\nfunction _createBoard(data) {\r\n    return {\r\n        type: 'CREATE_BOARD',\r\n        data\r\n    }\r\n}\r\nfunction _changeBoardName(data) {\r\n    return {\r\n        type: 'CHANGE_BOARD_NAME',\r\n        data\r\n    }\r\n}\r\nfunction _deleteBoard(data) {\r\n    return {\r\n        type: 'DELETE_BOARD',\r\n        data\r\n    }\r\n}","import React, { useEffect } from 'react';\r\nimport { useForm } from \"react-hook-form\";\r\nexport function ActionForm({ currRef, placeholder, name, onSubmitFunc, toggleAdd }) {\r\n    const { register, handleSubmit } = useForm();\r\n\r\n    useEffect(() => {\r\n        currRef.current.focus();\r\n    }, [currRef])\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"action-form\">\r\n            <form onSubmit={handleSubmit(onSubmitFunc)}>\r\n                <div className=\"flex column\">\r\n                    <input name={name} type=\"text\"\r\n                        style={{ resize: \"none\" }}\r\n                        ref={(e) => {\r\n                            register(e)\r\n                            currRef.current = e\r\n                        }} placeholder={placeholder}\r\n                        autoComplete=\"off\"\r\n                    />\r\n                    <div className=\"btns-section flex space-between\">\r\n                        <button className=\"add-btn\" >Add</button>\r\n                        <button onClick={toggleAdd} >X</button>\r\n                    </div>\r\n\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\n","import React, { useEffect, useState, useRef } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { BoardList } from '../../cmps/BoardList/BoardList'\r\nimport { useParams } from 'react-router-dom'\r\nimport { setActiveBoard, saveToStorage } from '../../store/actions/boardActions'\r\nimport { createBoard } from '../../store/actions/boardActions';\r\nimport { ActionForm } from '../../cmps/ActionForm/ActionForm';\r\n\r\nexport function HomePage() {\r\n    const state = useSelector(state => state.mainStore)\r\n    const { id } = useParams();\r\n    const currBoard = state.boards[id]\r\n    const dispatch = useDispatch()\r\n    const [isAddBoardVis, setAddBoardVis] = useState(false)\r\n    const boardRef = useRef(null);\r\n\r\n\r\n    const onCreateBoard = (data) => {\r\n        const title = data.boardTitle\r\n        if (!title) return\r\n        dispatch(createBoard(title))\r\n        onToggleAddBoard()\r\n    }\r\n    const onToggleAddBoard = () => {\r\n        setAddBoardVis(!isAddBoardVis)\r\n    }\r\n\r\n\r\n    useEffect(() => { dispatch(saveToStorage(state)) }, [state, dispatch, currBoard])\r\n\r\n\r\n    useEffect(() => {\r\n        dispatch(setActiveBoard(''))\r\n    }, [dispatch])\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"home-page margin-center\">\r\n            <div className=\"center-container margin-center\">\r\n                <div className=\"top-part flex align-center space-between\">\r\n                    <h1>CHOOSE YOUR BOARD</h1>\r\n                    <div className=\"add-board-section flex\">\r\n                        {!isAddBoardVis &&\r\n                            <button onClick={onToggleAddBoard} className=\"create-board\">Create Board</button>\r\n                        }\r\n                        {isAddBoardVis &&\r\n                            <div className=\"add-board\">\r\n                                <ActionForm currRef={boardRef} name=\"boardTitle\" placeholder={'Add Board Title'} toggleAdd={onToggleAddBoard} onSubmitFunc={onCreateBoard} />\r\n                            </div>\r\n                        }\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"borad-list-container flex justify-center\">\r\n                    <section className=\"board-list-section\">\r\n                        <BoardList />\r\n                    </section>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n","import boardService from '../../service/boardService';\r\n\r\nexport function createList(currBoard, listTitle) {\r\n    return async dispatch => {\r\n        try {\r\n            const newList = await boardService.createList(listTitle)\r\n            const data = {\r\n                newList: newList,\r\n                currBoard: currBoard,\r\n            }\r\n            dispatch(_createList(data));\r\n        }\r\n        catch (err) {\r\n            throw err\r\n        }\r\n    }\r\n\r\n}\r\nexport function toggleBgSide() {\r\n    return async dispatch => {\r\n        try {\r\n            dispatch(_toggleBgSide());\r\n        }\r\n        catch (err) {\r\n            throw err\r\n        }\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nfunction _createList(data) {\r\n    return {\r\n        type: 'CREATE_LIST',\r\n        data\r\n    }\r\n}\r\nfunction _toggleBgSide() {\r\n    return {\r\n        type: 'TOGGLE_BG_SIDE',\r\n    }\r\n}","import React from 'react';\r\n\r\n\r\nexport function DeleteVerify({ onDelete, onToggle,itemToDelete }) {\r\n\r\n    return (\r\n        <div className=\"delete-verify\">\r\n            <div className=\"main-content-delete flex column\">\r\n                <p>Delete this {itemToDelete}?</p>\r\n                <div className=\"btns flex space-between\">\r\n\r\n                    <button className=\"dlt-btn\" onClick={onDelete}>Delete</button>\r\n                    <button onClick={onToggle}>X</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n","import React, { useState, useRef } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { createList } from '../../../store/actions/headerActions'\r\nimport { createBoard, changeBoardName, deleteBoard } from '../../../store/actions/boardActions';\r\nimport { ActionForm } from '../../ActionForm/ActionForm';\r\nimport { useHistory } from 'react-router';\r\nimport { DeleteVerify } from '../../CardDetails/DeleteVerify/DeleteVerify';\r\n\r\nexport function AppHeaderMenu({ onRemoveSavedBoard, activeBoard, onToggleAppHeaderMenu, currBoard }) {\r\n    const dispatch = useDispatch()\r\n    const history = useHistory()\r\n    const [isAddBoardVis, setAddBoardVis] = useState(false)\r\n    const [isChangeNameVis, setChangeName] = useState(false)\r\n    const [isAddListVisible, setAddListVisibility] = useState(false)\r\n    const [isDeleteVerify, setDeleteVerify] = useState(false)\r\n    const onToggleAddList = () => {\r\n        setAddListVisibility(!isAddListVisible)\r\n    }\r\n    const currRef = useRef(null);\r\n\r\n    const onAddList = ({ listName }) => {\r\n        dispatch(createList(activeBoard, listName))\r\n        onToggleAppHeaderMenu()\r\n    }\r\n\r\n\r\n    const onCreateBoard = (data) => {\r\n        dispatch(createBoard(data.boardTitle))\r\n        onToggleAppHeaderMenu()\r\n    }\r\n\r\n\r\n    const onToggleAddBoard = () => {\r\n        setAddBoardVis(!isAddBoardVis)\r\n    }\r\n\r\n    const onToggleBoardName = () => {\r\n        setChangeName(!isChangeNameVis)\r\n    }\r\n\r\n    const onChangeBoardName = (data) => {\r\n        dispatch(changeBoardName(currBoard, data.boardName))\r\n        onToggleAppHeaderMenu()\r\n    }\r\n\r\n\r\n    const onDeleteBoard = () => {\r\n        if (currBoard.isFav) {\r\n            dispatch(onRemoveSavedBoard(currBoard))\r\n        }\r\n        onToggleAppHeaderMenu()\r\n        dispatch(deleteBoard(currBoard))\r\n        history.push('/')\r\n    }\r\n\r\n\r\n    const onToggleDleteBoard = () => {\r\n        setDeleteVerify(!isDeleteVerify)\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"app-header-menu\">\r\n            <div className=\"container\">\r\n                <div className=\"title flex justify-center\">\r\n                    <h3>Board Actions</h3>\r\n                </div>\r\n                <hr />\r\n                <div className=\"menu-actions\">\r\n                    {!isChangeNameVis &&\r\n                        <p onClick={onToggleBoardName}>Change Board Name...</p>\r\n                    }\r\n\r\n                    {isChangeNameVis &&\r\n                        <ActionForm name=\"boardName\" placeholder={'Add Board Title'}\r\n                            toggleAdd={onToggleBoardName} onSubmitFunc={onChangeBoardName} currRef={currRef}/>\r\n                    }\r\n                    {!isAddBoardVis &&\r\n                        <p onClick={onToggleAddBoard}>Create Board...</p>\r\n                    }\r\n                    {isAddBoardVis &&\r\n                        <ActionForm name=\"boardTitle\" placeholder={'Add Board Title'}\r\n                            toggleAdd={onToggleAddBoard} onSubmitFunc={onCreateBoard} currRef={currRef} />\r\n                    }\r\n                    {!isDeleteVerify &&\r\n                        <p onClick={onToggleDleteBoard}>Delete Board...</p>\r\n                    }\r\n\r\n                    {isDeleteVerify &&\r\n                        <DeleteVerify itemToDelete={'board'} onToggle={onToggleDleteBoard} onDelete={onDeleteBoard} />\r\n                    }\r\n                    {!isAddListVisible &&\r\n                        <p onClick={onToggleAddList}>Add List...</p>\r\n                    }\r\n                    {isAddListVisible &&\r\n                        <ActionForm name=\"listName\" placeholder={'Add list Title'}\r\n                            currRef={currRef} toggleAdd={onToggleAddList} onSubmitFunc={onAddList} />\r\n                    }\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n","\r\nimport React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom'\r\nimport { faCheck } from '@fortawesome/free-solid-svg-icons'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nexport function BoardsMenu({ currBoard, closeBoard }) {\r\n    const state = useSelector(state => state.mainStore)\r\n    const boards = Object.keys(state.boards)\r\n    const boardid = currBoard.id\r\n    const check = <FontAwesomeIcon icon={faCheck} />\r\n\r\n\r\n    if (!boardid) return '...loading'\r\n    return (\r\n        <div className=\"boards-menu\">\r\n\r\n            <div className=\"main-menu-container \">\r\n                <div className=\"flex column align-center space-between\">\r\n                    {boards.map(board => {\r\n                        const currBoard = state.boards[board];\r\n                        return <Link key={board} to={`/boards/${board}`} >\r\n                            <div onClick={closeBoard} className=\"board-name flex\">\r\n                                <img style={{ width: '30px' }} src={require(`../../../assets/images/bgs/${currBoard.backgroundImg}.jpg`)} alt=\"board-background\" />\r\n                                <p key={board}>{currBoard.name}</p>\r\n                                {boardid === currBoard.id ? <span className=\"check\">{check}</span> : ''}\r\n                            </div>\r\n                        </Link>\r\n                    }\r\n                    )}\r\n                </div>\r\n\r\n            </div>\r\n            <div className=\"close-board-menu flex\">\r\n                <button className=\"close-btn\" onClick={closeBoard}>X</button>\r\n            </div>\r\n        </div >\r\n    )\r\n\r\n\r\n\r\n}","import React, { useEffect, useState } from 'react';\r\nimport { toggleBgSide } from '../../store/actions/headerActions'\r\nimport { Link } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { favoriteBoard, removeSavedBoard } from '../../store/actions/boardActions'\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faHome } from '@fortawesome/free-solid-svg-icons'\r\nimport { faBorderAll } from '@fortawesome/free-solid-svg-icons'\r\nimport { faPlus } from '@fortawesome/free-solid-svg-icons'\r\nimport { faStar } from '@fortawesome/free-solid-svg-icons'\r\nimport { AppHeaderMenu } from './AppHeaderMenu/AppHeaderMenu';\r\nimport { BoardsMenu } from './BoardsMenu/BoardsMenu'\r\n\r\n\r\nexport function AppHeader() {\r\n\r\n    const state = useSelector(state => state.mainStore)\r\n    const { activeBoard } = state\r\n    const currBoard = state.boards[activeBoard]\r\n    const [navBarTheme, setTheme] = useState()\r\n    const bottomNav = currBoard?.bottomNav\r\n    const [isBgBoardOpen, setIsBgBoardOpen] = useState(false)\r\n    const [isHeaderMenuVisible, setHeaderMenu] = useState(false)\r\n    const [showSavedTitle, setSaved] = useState(false)\r\n    const [isBoardsMenuVis, setBoardsMenuVis] = useState(false)\r\n    const dispatch = useDispatch()\r\n\r\n\r\n    const home = <FontAwesomeIcon icon={faHome} />\r\n    const boards = <FontAwesomeIcon icon={faBorderAll} />\r\n    const plusSign = <FontAwesomeIcon icon={faPlus} />\r\n    const star = <FontAwesomeIcon icon={faStar} />\r\n\r\n\r\n    const toggleBgBoard = () => {\r\n        setIsBgBoardOpen(!isBgBoardOpen)\r\n        dispatch(toggleBgSide())\r\n    }\r\n\r\n    const onSaveBoard = () => {\r\n        if (currBoard.isFav) {\r\n            dispatch(removeSavedBoard(currBoard))\r\n            return\r\n        }\r\n        dispatch(favoriteBoard(currBoard))\r\n        setSaved(true)\r\n        setTimeout(() => {\r\n            onHideSave()\r\n\r\n        }, 500);\r\n    }\r\n\r\n    const onHideSave = () => {\r\n        setSaved(false)\r\n    }\r\n\r\n\r\n    const onToggleAppHeaderMenu = () => {\r\n        setHeaderMenu(!isHeaderMenuVisible)\r\n    }\r\n\r\n    const onToggleBoardsMenu = () => {\r\n        setBoardsMenuVis(!isBoardsMenuVis)\r\n    }\r\n\r\n    useEffect(() => {\r\n        activeBoard ? setTheme('') : setTheme('dark')\r\n    }, [activeBoard])\r\n\r\n    return (\r\n        <nav className={`app-header flex column ${navBarTheme}`}>\r\n            <div className={`top-part flex ${navBarTheme}`}>\r\n                <div className=\"nav-tools flex space-between align-center\">\r\n                    <div className=\"left-side flex align-center\">\r\n                        {currBoard &&\r\n                            <Link to=\"/\"><button className=\"home\" onClick={() => setBoardsMenuVis(false)}>{home}</button></Link>\r\n                        }\r\n                        {currBoard &&\r\n                            <button onClick={onToggleBoardsMenu}>{boards} <span className=\"desktop-boards\">Boards</span> </button>\r\n                        }\r\n                        {isBoardsMenuVis &&\r\n                            <div>\r\n                                <BoardsMenu closeBoard={() => setBoardsMenuVis(false)} currBoard={currBoard} />\r\n\r\n                            </div>\r\n                        }\r\n                    </div>\r\n                    <div className=\"logo\">\r\n                        <h1>TaskForce</h1>\r\n                    </div>\r\n                    <div className=\"right-side flex align-center\">\r\n                        {currBoard &&\r\n                            <button className=\"app-header-menu-btn\" onClick={onToggleAppHeaderMenu}>{plusSign}</button>\r\n                        }\r\n                    </div>\r\n                </div>\r\n\r\n\r\n            </div>\r\n            {activeBoard && currBoard &&\r\n                <div className={`bottom-nav flex align-center ${bottomNav}`}>\r\n                    <h1> {currBoard.name}</h1>\r\n                    <button className=\"btn\" onClick={toggleBgBoard}>Change Background</button>\r\n                    <button onClick={onSaveBoard} className={`btn btn-fav-board ${currBoard?.isFav ? 'saved' : ''}`}>{star}</button>\r\n                    <p className=\"total-lists\">Total Lists: {currBoard.listOrder.length}</p>\r\n                    {showSavedTitle &&\r\n                        <p className=\"save-notification\">saved!</p>\r\n                    }\r\n                    {isHeaderMenuVisible &&\r\n                        <AppHeaderMenu\r\n                            onRemoveSavedBoard={removeSavedBoard}\r\n                            currBoard={currBoard}\r\n                            activeBoard={activeBoard}\r\n                            onToggleAppHeaderMenu={onToggleAppHeaderMenu} />\r\n                    }\r\n                </div>\r\n            }\r\n        </nav >\r\n    )\r\n}\r\n\r\n\r\n\r\n","import React from 'react';\r\n\r\nexport function CardLabel({ label }) {\r\n    return (\r\n        <div style={{ backgroundColor: `${label}` }} className=\"card-label\">\r\n        </div>\r\n    )\r\n}\r\n\r\n","import React from 'react';\r\n\r\nimport { Draggable } from 'react-beautiful-dnd'\r\nimport styled from 'styled-components'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faPencilAlt, faTasks, faClock, faEye, faClipboardList } from '@fortawesome/free-solid-svg-icons'\r\nimport { CardLabel } from '../CardDetails/CardLabel/CardLabel'\r\nexport function CardPreview({ cards, cardid, index }) {\r\n\r\n    const currCard = cards[cardid]\r\n\r\n    const pencil = <FontAwesomeIcon icon={faPencilAlt} />\r\n    const checklist = <FontAwesomeIcon icon={faTasks} />\r\n    const clock = <FontAwesomeIcon icon={faClock} />\r\n    const eye = <FontAwesomeIcon icon={faEye} />\r\n    const clipBoard = <FontAwesomeIcon icon={faClipboardList} />\r\n\r\n\r\n    if (!currCard) return 'loading...'\r\n    return (\r\n        <Draggable draggableId={currCard?.id} index={index}>\r\n            {(provided, snapshot) => (\r\n                <div>\r\n                    <MainContainer\r\n                        {...provided.draggableProps}\r\n                        {...provided.dragHandleProps}\r\n                        ref={provided.innerRef}\r\n                        isDragging={snapshot.isDragging}\r\n                    >\r\n                        <div className=\"card-preview flex column\">\r\n                            {currCard.cardCover &&\r\n                                <div style={{ backgroundColor: `${currCard.cardCover}` }} className=\"card-top-cover\">\r\n                                </div>\r\n                            }\r\n                            <div className=\"card-labels flex\">\r\n                                {currCard.labels && currCard.labels.map(label => {\r\n                                    return <CardLabel key={label} label={label} />\r\n                                })}\r\n                            </div>\r\n                            <div className=\"main-card-preview-content\">\r\n\r\n                                <div className=\"top-section flex space-between\">\r\n                                    <div className=\"title\">\r\n                                        <p>{currCard?.title}</p>\r\n                                    </div>\r\n                                    <span className=\"edit\" >{pencil}</span>\r\n                                </div>\r\n                                <div className=\"indicators flex align-center\">\r\n                                    {currCard.isWatched &&\r\n                                        eye\r\n                                    }\r\n                                    {currCard.dueDate &&\r\n                                        <span className=\"flex align-center\">\r\n                                            {clock}\r\n                                            <p style={{ fontSize: '10px' }}>\r\n\r\n                                                {currCard.dueDate.substring(4, 10)}\r\n                                            </p>\r\n                                        </span>\r\n                                    }\r\n                                    {currCard.desc &&\r\n                                        clipBoard\r\n                                    }\r\n                                    {Object.keys(currCard.checklist).length > 0 &&\r\n                                        checklist\r\n                                    }\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </MainContainer>\r\n                </div>\r\n            )\r\n            }\r\n        </Draggable >\r\n    )\r\n}\r\n\r\nconst MainContainer = styled.div`\r\n\r\nwidth:100%;\r\n`;","import UTILS from '../service/utils';\r\n\r\nfunction deleteCard(currBoard, currList, cardId) {\r\n  const newCards = currBoard.cards\r\n  delete newCards[cardId]\r\n\r\n  const newCardIds = currList.cardIds.filter((cardsId) => cardsId !== cardId)\r\n  currList.cardIds = newCardIds\r\n\r\n  return { currBoard: currBoard, currList: currList, cardId }\r\n}\r\n\r\n\r\n\r\nfunction copyCard(cardToCopy) {\r\n  const newCard = JSON.parse(JSON.stringify(cardToCopy))\r\n  newCard.id = UTILS.generatePassword(5)\r\n  return newCard\r\n}\r\n\r\n\r\n\r\n\r\n\r\nfunction createCheckList(checkListName) {\r\n  return {\r\n    id: UTILS.generatePassword(5),\r\n    name: checkListName,\r\n    list: {},\r\n    createdAt: new Date().toLocaleDateString()\r\n  }\r\n}\r\n\r\n\r\nfunction createCheckListItem(itemName) {\r\n  return {\r\n    id: UTILS.generatePassword(5),\r\n    text: itemName,\r\n    isChecked: false,\r\n    createdAt: new Date().toLocaleDateString()\r\n  }\r\n}\r\n\r\nfunction removeLabel(currCard, labelIndex) {\r\n  currCard.labels.splice(labelIndex, 1)\r\n  const newLabelList = currCard.labels\r\n  return newLabelList\r\n}\r\n\r\n\r\n\r\nexport default {\r\n  deleteCard,\r\n  copyCard,\r\n  createCheckList,\r\n  createCheckListItem,\r\n  removeLabel\r\n}","import cardService from '../../service/cardService';\r\n\r\nexport function toggleCardDetails(isCardDetailShown) {\r\n    return async dispatch => {\r\n        try {\r\n            dispatch(_toggleCardDetails(isCardDetailShown));\r\n            \r\n        }\r\n        catch (err) {\r\n            throw err\r\n        }\r\n    }\r\n}\r\nexport function updateCurrList(listId) {\r\n    return async dispatch => {\r\n        try {\r\n            dispatch(_updateCurrList(listId));\r\n            \r\n        }\r\n        catch (err) {\r\n            throw err\r\n        }\r\n    }\r\n}\r\n\r\nexport function changeCardTitle(currCard, cardTitle, currBoard) {\r\n    return async dispatch => {\r\n        const data = {\r\n            currCard: currCard,\r\n            cardTitle: cardTitle,\r\n            currBoard: currBoard\r\n        }\r\n        try {\r\n            dispatch(_changeCardTitle(data));\r\n        }\r\n        catch (err) {\r\n            throw err\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport function deleteCard(currBoard, currList, cardId) {\r\n    return async dispatch => {\r\n        try {\r\n            const updatedData = await cardService.deleteCard(currBoard, currList, cardId)\r\n\r\n            dispatch(_deleteCard(updatedData));\r\n        }\r\n        catch (err) {\r\n            throw err\r\n        }\r\n    }\r\n}\r\nexport function copyCard(currBoard, copyToList, cardToCopy) {\r\n    return async dispatch => {\r\n        try {\r\n            const copiedCard = await cardService.copyCard(cardToCopy)\r\n            const updatedData = {\r\n                copiedCard: copiedCard,\r\n                currBoard: currBoard,\r\n                copyToListID: copyToList\r\n            }\r\n            dispatch(_copyCard(updatedData));\r\n        }\r\n        catch (err) {\r\n            throw err\r\n        }\r\n    }\r\n}\r\nexport function moveCard(currBoard, moveToList, currCard, currList) {\r\n    return async dispatch => {\r\n        try {\r\n            const updatedData = {\r\n                currBoard: currBoard,\r\n                moveToListID: moveToList,\r\n                currCard: currCard,\r\n                currList: currList\r\n            }\r\n            dispatch(_moveCard(updatedData));\r\n        }\r\n        catch (err) {\r\n            throw err\r\n        }\r\n    }\r\n}\r\nexport function setCardDesc(currBoard, currCard, desc) {\r\n    return async dispatch => {\r\n        try {\r\n            const data = {\r\n                currBoard: currBoard,\r\n                currCard: currCard,\r\n                desc: desc,\r\n            }\r\n            dispatch(_setCardDesc(data));\r\n            \r\n        }\r\n        catch (err) {\r\n            throw err\r\n        }\r\n    }\r\n}\r\nexport function checkItem(currBoard, currCard, currCheckList, currItem, isChecked) {\r\n    return async dispatch => {\r\n        try {\r\n            const data = {\r\n                currBoard: currBoard,\r\n                currCard: currCard,\r\n                currCheckList: currCheckList,\r\n                currItem: currItem,\r\n                isChecked: isChecked\r\n            }\r\n            dispatch(_toggleCheckItem(data));\r\n        }\r\n        catch (err) {\r\n            throw err\r\n        }\r\n    }\r\n}\r\nexport function setLabel(currBoard, currCard, labelColor) {\r\n    const data = {\r\n        currBoard: currBoard,\r\n        currCard: currCard,\r\n        labelColor: labelColor\r\n    }\r\n    return async dispatch => {\r\n        try {\r\n            dispatch(_setLabel(data));\r\n        }\r\n        catch (err) {\r\n            throw err\r\n        }\r\n    }\r\n}\r\nexport function removeLabel(currBoard, currCard, labelIndex) {\r\n    const newLabelList = cardService.removeLabel(currCard, labelIndex)\r\n    const data = {\r\n        currBoard: currBoard,\r\n        currCard: currCard,\r\n        newLabelList: newLabelList\r\n    }\r\n    return async dispatch => {\r\n        try {\r\n            dispatch(_updateLabels(data));\r\n        }\r\n        catch (err) {\r\n            throw err\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport function toggleCardWatch(currBoard, currCard, isWatched) {\r\n    return async dispatch => {\r\n        try {\r\n            const data = {\r\n                currBoard: currBoard,\r\n                currCard: currCard,\r\n                isWatched: isWatched\r\n            }\r\n            dispatch(_toggleCardWatch(data));\r\n            \r\n        }\r\n        catch (err) {\r\n            throw err\r\n        }\r\n    }\r\n}\r\n\r\nexport function createCheckList(currBoard, currCard, checklistName) {\r\n    return async dispatch => {\r\n        try {\r\n            const newChecklist = await cardService.createCheckList(checklistName)\r\n            const data = {\r\n                currBoard: currBoard,\r\n                currChecklist: newChecklist,\r\n                currCard: currCard,\r\n            }\r\n            dispatch(_addChecklist(data));\r\n            \r\n        }\r\n        catch (err) {\r\n            throw err\r\n        }\r\n    }\r\n}\r\nexport function addCheckListItem(currBoard, currCard, currCheckList, itemName) {\r\n    return async dispatch => {\r\n        try {\r\n            const currItem = await cardService.createCheckListItem(itemName)\r\n            const data = {\r\n                currBoard: currBoard,\r\n                currCard: currCard,\r\n                currCheckList: currCheckList,\r\n                newItem: currItem\r\n            }\r\n            dispatch(_addCheckListItem(data));\r\n            \r\n        }\r\n        catch (err) {\r\n            throw err\r\n        }\r\n    }\r\n}\r\nexport function removeCheckListItem(currBoard, currCard, currCheckList, itemToRemove) {\r\n    return async dispatch => {\r\n        try {\r\n            const data = {\r\n                currBoard: currBoard,\r\n                currCard: currCard,\r\n                currCheckList: currCheckList,\r\n                itemToRemove: itemToRemove\r\n            }\r\n            dispatch(_removeCheckListItem(data));\r\n            \r\n        }\r\n        catch (err) {\r\n            throw err\r\n        }\r\n    }\r\n}\r\nexport function removeCheckList(currBoard, currCard, checkListToRemove) {\r\n    return async dispatch => {\r\n        try {\r\n            const data = {\r\n                currBoard: currBoard,\r\n                checkListToRemove: checkListToRemove,\r\n                currCard: currCard,\r\n            }\r\n            dispatch(_removeCheckList(data));\r\n            \r\n        }\r\n        catch (err) {\r\n            throw err\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport function setCardCover(currBoard, currCard, color) {\r\n    return async dispatch => {\r\n        try {\r\n            const data = {\r\n                currBoard: currBoard,\r\n                currCard: currCard,\r\n                color: color,\r\n            }\r\n            dispatch(_setCardCover(data));\r\n            \r\n        }\r\n        catch (err) {\r\n            throw err\r\n        }\r\n    }\r\n}\r\n\r\nexport function setDueDate(currBoard, currCard, dueDate) {\r\n    return async dispatch => {\r\n        try {\r\n            const data = {\r\n                currBoard: currBoard,\r\n                currCard: currCard,\r\n                dueDate: dueDate,\r\n            }\r\n            dispatch(_setDueDate(data));\r\n            \r\n        }\r\n        catch (err) {\r\n            throw err\r\n        }\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\nfunction _toggleCardDetails(data) {\r\n    return {\r\n        type: 'TOGGLE_CARD_DETAILS',\r\n        data\r\n    }\r\n}\r\nfunction _updateCurrList(data) {\r\n    return {\r\n        type: 'UPDATE_CURR_LIST',\r\n        data\r\n    }\r\n}\r\nfunction _deleteCard(data) {\r\n    return {\r\n        type: 'DELETE_CARD',\r\n        data\r\n    }\r\n}\r\nfunction _copyCard(data) {\r\n    return {\r\n        type: 'COPY_CARD',\r\n        data\r\n    }\r\n}\r\nfunction _changeCardTitle(data) {\r\n    return {\r\n        type: 'SET_CARD_TITLE',\r\n        data\r\n    }\r\n}\r\nfunction _moveCard(data) {\r\n    return {\r\n        type: 'MOVE_CARD',\r\n        data\r\n    }\r\n}\r\nfunction _setCardCover(data) {\r\n    return {\r\n        type: 'CARD_COVER',\r\n        data\r\n    }\r\n}\r\nfunction _setCardDesc(data) {\r\n    return {\r\n        type: 'SET_DESC',\r\n        data\r\n    }\r\n}\r\nfunction _addChecklist(data) {\r\n    return {\r\n        type: 'CREATE_CHECKLIST',\r\n        data\r\n    }\r\n}\r\nfunction _removeCheckList(data) {\r\n    return {\r\n        type: 'REMOVE_CHECKLIST',\r\n        data\r\n    }\r\n}\r\nfunction _addCheckListItem(data) {\r\n    return {\r\n        type: 'ADD_CHECKLIST_ITEM',\r\n        data\r\n    }\r\n}\r\nfunction _removeCheckListItem(data) {\r\n    return {\r\n        type: 'REMOVE_CHECKLIST_ITEM',\r\n        data\r\n    }\r\n}\r\nfunction _setDueDate(data) {\r\n    return {\r\n        type: 'SET_DUE_DATE',\r\n        data\r\n    }\r\n}\r\nfunction _toggleCardWatch(data) {\r\n    return {\r\n        type: 'TOGGLE_CARD_WATCH',\r\n        data\r\n    }\r\n}\r\nfunction _toggleCheckItem(data) {\r\n    return {\r\n        type: 'TOGGLE_CHECK_ITEM',\r\n        data\r\n    }\r\n}\r\nfunction _setLabel(data) {\r\n    return {\r\n        type: 'SET_LABEL',\r\n        data\r\n    }\r\n}\r\nfunction _updateLabels(data) {\r\n    return {\r\n        type: 'UPDATE_LABELS',\r\n        data\r\n    }\r\n}","import React from 'react';\r\nimport { CardPreview } from '../CardPreview/CardPreview';\r\nimport { useParams, useHistory } from 'react-router-dom'\r\nimport { useDispatch } from 'react-redux';\r\nimport { toggleCardDetails, updateCurrList } from '../../store/actions/cardActions'\r\n\r\nexport function CardList({ cards, provided, cardIds, currListID }) {\r\n    const { boardid } = useParams()\r\n    const dispatch = useDispatch()\r\n    const history = useHistory()\r\n\r\n    const onToggleCardDetails = (cardid) => {\r\n        history.push(`/boards/${boardid}/${currListID}/${cardid}`)\r\n        dispatch(updateCurrList(currListID.id))\r\n        dispatch(toggleCardDetails(true))\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"card-list\">\r\n            {cardIds.map((cardid, idx) => {\r\n                return <div key={cardid} onClick={() => onToggleCardDetails(cardid)}>\r\n                    <CardPreview\r\n                        key={cardid}\r\n                        cards={cards}\r\n                        index={idx}\r\n                        cardid={cardid} />\r\n\r\n                </div>\r\n            })}\r\n            {provided.placeholder}\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\n","import UTILS from './utils'\r\nimport cardService from './cardService'\r\n\r\nasync function deleteList(currBoard, currList) {\r\n  const newLists = currBoard.lists\r\n  delete newLists[currList.id]\r\n  const newListOrder = currBoard.listOrder.filter(list => list !== currList.id)\r\n\r\n  const currListCardIds = currList.cardIds\r\n  const newBoardCards = currBoard.cards\r\n\r\n\r\n  function _deleteCards(cardID) {\r\n    delete newBoardCards[cardID]\r\n  }\r\n  currListCardIds.forEach(cardID => _deleteCards(cardID))\r\n\r\n\r\n  return {\r\n    newLists: newLists,\r\n    newListOrder: newListOrder,\r\n    newBoardCards: newBoardCards\r\n  }\r\n\r\n}\r\n\r\n\r\nasync function copyList(currBoard, listToCopy) {\r\n  const copiedListTitle = 'Copy of - ' + listToCopy.title\r\n  const newList = await _createList(copiedListTitle)\r\n  const matchingCards = []\r\n  const newCards = {}\r\n  const cardIdsToCopy = listToCopy.cardIds\r\n  _findMatchingCards(matchingCards, cardIdsToCopy, currBoard.cards)\r\n\r\n  matchingCards.forEach(\r\n    card => {\r\n      const cardCopy = copyCard(card)\r\n      newCards[cardCopy.id] = cardCopy\r\n      return\r\n    }\r\n  )\r\n  newList.cardIds = Object.keys(newCards)\r\n\r\n  const start = currBoard.listOrder.findIndex(element => element === listToCopy.id)\r\n  const end = newList.id\r\n  const newListOrder = currBoard.listOrder\r\n  newListOrder.splice(start + 1, 0, end)\r\n\r\n  return {\r\n    copiedList: newList,\r\n    newListOrder: newListOrder,\r\n    copiedCards: newCards\r\n  }\r\n}\r\n\r\n\r\nfunction getListCards(cards, list) {\r\n  const currCards = {}\r\n  list.cardIds.forEach((cardID) => { return cards[cardID] ? currCards[cardID] = cards[cardID] : '' })\r\n  return currCards\r\n}\r\n\r\n\r\n\r\nfunction _findMatchingCards(matchingCards, cardsToCopy, allCards) {\r\n  cardsToCopy.forEach(cardId => {\r\n    const currCard = allCards[cardId]\r\n    if (currCard) {\r\n      matchingCards.push(currCard)\r\n    }\r\n\r\n  })\r\n\r\n}\r\n\r\nasync function _createList(listName,) {\r\n  return {\r\n    id: UTILS.generatePassword(6),\r\n    title: listName,\r\n    cardIds: []\r\n  }\r\n}\r\n\r\nfunction copyCard(cardToCopy) {\r\n  const newCard = cardService.copyCard(cardToCopy)\r\n  newCard.id = UTILS.generatePassword(5)\r\n  return newCard\r\n}\r\n\r\n\r\nfunction createCard(cardTitle, description = '') {\r\n  return {\r\n    id: UTILS.generatePassword(5),\r\n    title: cardTitle,\r\n    desc: description,\r\n    checklist: {},\r\n    cardCover: '',\r\n    isWatched: false,\r\n    labels: [],\r\n    dueDate: '',\r\n    createdAt: new Date().toLocaleDateString()\r\n  }\r\n}\r\n\r\n\r\nexport default {\r\n  deleteList,\r\n  createCard,\r\n  copyList,\r\n  getListCards\r\n}\r\n","import listService from '../../service/listService'\r\n\r\nexport function createCard(currBoard, currList, cardTitle) {\r\n    return async dispatch => {\r\n        try {\r\n            const newCard = await listService.createCard(cardTitle)\r\n            const data = {\r\n                newCard: newCard,\r\n                currBoard: currBoard,\r\n                currList: currList\r\n            }\r\n            dispatch(_createCard(data));\r\n        }\r\n        catch (err) {\r\n            throw err\r\n        }\r\n    }\r\n}\r\nexport function deleteList(currBoard, currList) {\r\n    return async dispatch => {\r\n        try {\r\n            const updatedData = await listService.deleteList(currBoard, currList)\r\n            const data = {\r\n                currBoard: currBoard,\r\n                currList: currList,\r\n                newLists: updatedData.newLists,\r\n                newListOrder: updatedData.newListOrder,\r\n                newBoardCards: updatedData.newBoardCards\r\n            }\r\n            dispatch(_deleteList(data));\r\n        }\r\n        catch (err) {\r\n            throw err\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport function moveList(currBoard, listToMove, moveToBoardId) {\r\n\r\n    return async dispatch => {\r\n        try {\r\n            const currListCards = listService.getListCards(currBoard.cards, listToMove)\r\n            const data = {\r\n                currBoard: currBoard,\r\n                listToMove: listToMove,\r\n                moveToBoardId: moveToBoardId,\r\n                currListCards: currListCards\r\n            }\r\n            dispatch(_moveList(data));\r\n        }\r\n        catch (err) {\r\n            throw err\r\n        }\r\n    }\r\n}\r\n\r\nexport function copyList(currBoard, listToCopy) {\r\n\r\n    return async dispatch => {\r\n        try {\r\n            const newListCopy = await listService.copyList(currBoard, listToCopy)\r\n            const data = {\r\n                currBoard: currBoard,\r\n                copiedList: newListCopy.copiedList,\r\n                newListOrder: newListCopy.newListOrder,\r\n                copiedCards: newListCopy.copiedCards\r\n            }\r\n            dispatch(_copyList(data));\r\n        }\r\n        catch (err) {\r\n            throw err\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport function changeListName(currBoard, currList, listTitle) {\r\n\r\n    return async dispatch => {\r\n        try {\r\n            currList.title = listTitle\r\n            const newListTitle = currList\r\n            const data = {\r\n                currBoard: currBoard,\r\n                currList: newListTitle,\r\n            }\r\n            dispatch(_changeListName(data));\r\n        }\r\n        catch (err) {\r\n            throw err\r\n        }\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nfunction _deleteList(data) {\r\n    return {\r\n        type: 'DELETE_LIST',\r\n        data\r\n    }\r\n}\r\n\r\nfunction _createCard(data) {\r\n    return {\r\n        type: 'CREATE_CARD',\r\n        data\r\n    }\r\n}\r\nfunction _copyList(data) {\r\n    return {\r\n        type: 'COPY_LIST',\r\n        data\r\n    }\r\n}\r\nfunction _moveList(data) {\r\n    return {\r\n        type: 'MOVE_LIST',\r\n        data\r\n    }\r\n}\r\nfunction _changeListName(data) {\r\n    return {\r\n        type: 'CHANGE_LIST_NANE',\r\n        data\r\n    }\r\n}\r\n","import React, { useRef } from 'react';\r\nimport { useForm } from \"react-hook-form\";\r\nimport { createCard } from '../../store/actions/listActions'\r\n\r\nimport { useDispatch } from 'react-redux';\r\nimport { ActionForm } from '../ActionForm/ActionForm';\r\n\r\nexport function AddCard({ currBoard, currList, toggleAddCard }) {\r\n    const dispatch = useDispatch()\r\n    const { reset } = useForm();\r\n    const cardTitle = useRef(null);\r\n\r\n\r\n    const onCreateCard = data => {\r\n        if (!data.cardTitle) return\r\n        dispatch(createCard(currBoard, currList, data.cardTitle))\r\n        reset()\r\n        toggleAddCard()\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"add-card \">\r\n            <ActionForm\r\n                name={\"cardTitle\"}\r\n                currRef={cardTitle}\r\n                toggleAdd={toggleAddCard}\r\n                placeholder={'Enter card title'}\r\n                onSubmitFunc={onCreateCard} />\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\n","import React, { useEffect ,useCallback} from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { deleteList, copyList } from '../../store/actions/listActions'\r\n\r\n\r\nexport function ListMenu({ toggleListMenu, currBoard, currList, toggleAddCard, toggleEditTitle, onToggleMoveList }) {\r\n\r\n    const dispatch = useDispatch()\r\n    const onDeleteList = () => {\r\n        dispatch(deleteList(currBoard, currList))\r\n    }\r\n\r\n    const onCreateCard = () => {\r\n        toggleAddCard()\r\n\r\n    }\r\n\r\n    const onCopyList = () => {\r\n        dispatch(copyList(currBoard, currList))\r\n\r\n\r\n    }\r\n\r\n    const onEditTitle = () => {\r\n        toggleEditTitle()\r\n\r\n    }\r\n\r\n\r\n\r\n    const clicked = useCallback(\r\n        () => {\r\n            toggleListMenu()\r\n        },\r\n        [toggleListMenu],\r\n    )\r\n\r\n\r\n    useEffect(() => {\r\n        window.addEventListener('click', clicked)\r\n        return () => {\r\n            window.removeEventListener('click', clicked)\r\n        }\r\n    }, [clicked])\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"list-menu\">\r\n            <div className=\"menu-main-content\">\r\n                <div className=\"title margin-center\">\r\n                    <p onClick={toggleListMenu} className=\"close-btn\" >X</p>\r\n                    <p>List Actions</p>\r\n                </div>\r\n                <div className=\"menu-options \">\r\n                    <div className=\"option flex align-center\">\r\n                        <p onClick={onCreateCard}>Add Card...</p>\r\n                    </div>\r\n                    <div onClick={onCopyList} className=\"option flex align-center\">\r\n                        <p>Copy List...</p>\r\n                    </div>\r\n                    <div onClick={onToggleMoveList} className=\"option flex align-center\">\r\n                        <p>Move List...</p>\r\n                    </div>\r\n                    <div onClick={onEditTitle} className=\"option flex align-center\">\r\n                        <p>Edit Title...</p>\r\n                    </div>\r\n                    <div onClick={onDeleteList} className=\"option delete flex align-center\">\r\n                        <p>Delete List...</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n","import React, { useEffect, useRef } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { changeListName } from '../../store/actions/listActions'\r\nimport { useForm } from \"react-hook-form\";\r\n\r\nexport function ChangeListTitle({ toggleEditTitle, currBoard, currList }) {\r\n    const dispatch = useDispatch()\r\n    const { register, handleSubmit} = useForm();\r\n    const title = useRef(null);\r\n    const onSaveNewTitle = (data) => {\r\n        dispatch(changeListName(currBoard, currList, data.newTitle))\r\n        toggleEditTitle()\r\n    }\r\n\r\n    useEffect(() => {\r\n        title.current.focus();\r\n    })\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"change-list-title\">\r\n            <form onSubmit={handleSubmit(onSaveNewTitle)}>\r\n                <input\r\n                    autoComplete=\"off\"\r\n                    ref={(e) => {\r\n                        register(e)\r\n                        title.current = e\r\n                    }}\r\n                    name=\"newTitle\"\r\n                    style={{ width: '100%' }}\r\n                    type=\"text\" />\r\n                <div className=\"flex space-between\">\r\n                    <button style={{backgroundColor:\"rgb(76, 187, 61)\"}} type=\"submit\">Save</button>\r\n                    <button onClick={toggleEditTitle}>X</button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\n","import React, { useState} from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { moveList, deleteList } from '../../../store/actions/listActions'\r\nimport { useParams } from 'react-router-dom'\r\n\r\n\r\nexport function MoveList({ onToggleMoveList, currBoard, currList }) {\r\n    const state = useSelector(state => state.mainStore)\r\n    const boards = Object.values(state.boards)\r\n    const [moveToBoard, setMoveTo] = useState('')\r\n    const dispatch = useDispatch()\r\n    const { boardid } = useParams();\r\n\r\n\r\n\r\n    const onMoveList = ({ target }) => {\r\n        const moveToBoardId = target.value\r\n        setMoveTo(moveToBoardId)\r\n    }\r\n\r\n    const MoveList = () => {\r\n        if (boardid === moveToBoard || !moveToBoard) return\r\n        dispatch(moveList(currBoard, currList, moveToBoard))\r\n        dispatch(deleteList(currBoard, currList))\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"move-list\">\r\n            <div className=\"main-board-move-list\">\r\n                <select onChange={onMoveList} id=\"\">\r\n                    <option value=\"\">To...</option>\r\n                    {boards && boards.map((board) =>\r\n                        <option value={board.id} name={board.id} key={board.id}>{board.name}</option>\r\n                    )\r\n                    }\r\n                </select>\r\n                <div className=\"flex space-between\">\r\n                    <button onClick={MoveList}>Move</button>\r\n                    <button onClick={onToggleMoveList}>X</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n","import React, { useState, useEffect, useCallback } from 'react';\r\nimport { CardList } from '../CardList/CardList'\r\nimport { Droppable, Draggable } from 'react-beautiful-dnd'\r\nimport { AddCard } from '../AddCard/AddCard'\r\nimport styled from 'styled-components'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faPlus } from '@fortawesome/free-solid-svg-icons'\r\nimport { faEllipsisH } from '@fortawesome/free-solid-svg-icons'\r\nimport { ListMenu } from '../ListMenu/ListMenu';\r\nimport { ChangeListTitle } from '../ChangeListTitle/ChangeListTitle'\r\nimport { MoveList } from '../ListMenu/MoveList/MoveList'\r\n\r\n\r\nexport function List({ listId, lists, cards, currBoard, index, }) {\r\n    const [currList, setCurrList] = useState('')\r\n    const [isAddCardShown, setAddCard] = useState(false)\r\n    const [isListMenuShown, setListMenu] = useState(false)\r\n    const [isEditTitle, setIsEditTitle] = useState(false)\r\n    const [isMoveListVisible, setMoveList] = useState(false)\r\n\r\n    const plus = <FontAwesomeIcon icon={faPlus} />\r\n    const listMenu = <FontAwesomeIcon icon={faEllipsisH} />\r\n\r\n\r\n    const getCurrList = useCallback(\r\n        () => {\r\n            const getCurrList = lists[listId]\r\n            setCurrList(getCurrList)\r\n        },\r\n        [lists, listId,],\r\n    )\r\n\r\n    const onToggleAddCard = () => {\r\n        setAddCard(!isAddCardShown)\r\n    }\r\n    const onToggleListMenu = () => {\r\n        setListMenu(!isListMenuShown)\r\n    }\r\n    const toggleEditTitle = () => {\r\n        setIsEditTitle(!isEditTitle)\r\n    }\r\n\r\n    const onToggleMoveList = () => {\r\n        setMoveList(!isMoveListVisible)\r\n    }\r\n\r\n    useEffect(() => {\r\n        getCurrList()\r\n\r\n    }, [getCurrList])\r\n\r\n\r\n\r\n    if (!currList) return 'loading...'\r\n    return (\r\n        <Draggable\r\n            draggableId={currList.id}\r\n            index={index}\r\n        >\r\n            {(provided) => (\r\n                <MainDragContainer\r\n                    {...provided.draggableProps}\r\n                    ref={provided.innerRef}\r\n                >\r\n                    <div className=\"list flex column align-center\" >\r\n                        {isMoveListVisible &&\r\n                            <MoveList currBoard={currBoard} currList={currList} onToggleMoveList={onToggleMoveList} />\r\n                        }\r\n                        <div className=\"title-container align-center flex\">\r\n                            <span className=\"drag-handle flex space-between \"\r\n                                {...provided.dragHandleProps}\r\n                            >\r\n                                {!isEditTitle && <div>\r\n\r\n                                    <p className=\"list-title\">{currList.title}</p>\r\n\r\n                                    <p className=\"cards-count\">Total Cards: {currList.cardIds.length}</p>\r\n                                </div>\r\n                                }\r\n                                {isEditTitle && <span className=\"edit-title\">\r\n                                    <ChangeListTitle\r\n                                        toggleEditTitle={toggleEditTitle}\r\n                                        currBoard={currBoard}\r\n                                        currList={currList}\r\n                                    />\r\n                                </span>\r\n                                }\r\n                                <div className=\"menu-btn\">\r\n                                    <span className=\"list-menu-section align-center flex\"\r\n                                        onClick={onToggleListMenu}>\r\n                                        {listMenu}\r\n                                    </span>\r\n                                </div>\r\n                            </span>\r\n                        </div>\r\n                        {isListMenuShown &&\r\n                            <ListMenu\r\n                                toggleListMenu={onToggleListMenu}\r\n                                currBoard={currBoard}\r\n                                currList={currList}\r\n                                toggleAddCard={onToggleAddCard}\r\n                                toggleEditTitle={toggleEditTitle}\r\n                                onToggleMoveList={onToggleMoveList}\r\n                            />\r\n                        }\r\n                        <div className=\"main-container margin-center\">\r\n                            <Droppable droppableId={listId} type=\"card\">\r\n                                {(provided, snapshot) => {\r\n                                    return (\r\n                                        <div>\r\n                                            <MainDropContainer\r\n                                                ref={provided.innerRef}\r\n                                                {...provided.droppableProps}\r\n                                            >\r\n                                                <CardList\r\n                                                    cardIds={currList.cardIds}\r\n                                                    cards={cards}\r\n                                                    provided={provided}\r\n                                                    currListID={currList.id}\r\n                                                />\r\n                                            </MainDropContainer>\r\n                                        </div>\r\n                                    )\r\n                                }}\r\n                            </Droppable>\r\n                        </div>\r\n                        <section className=\"add-card-section flex align-center\">\r\n                            {!isAddCardShown && <div onClick={onToggleAddCard}\r\n                                className=\"add-card-text flex align-center\">\r\n                                <div className=\"plus-sign\">{plus}</div>\r\n                                {currList.cardIds.length === 0 ? <p>Add a card</p> : <p>Add anoter card</p>}\r\n                            </div>\r\n                            }\r\n                            {isAddCardShown && <div className=\"add-card-section\">\r\n                                <AddCard toggleAddCard={onToggleAddCard}\r\n                                    currList={currList}\r\n                                    currBoard={currBoard} />\r\n                            </div>\r\n                            }\r\n                            <div className=\"div\">\r\n\r\n                            </div>\r\n\r\n                        </section>\r\n\r\n\r\n                    </div>\r\n                </MainDragContainer>\r\n            )\r\n            }\r\n        </Draggable >\r\n    )\r\n}\r\nconst MainDropContainer = styled.div`\r\n\r\nwidth:100%;\r\nmin-height:10px;\r\n\r\n`;\r\nconst MainDragContainer = styled.div`\r\n\r\n`;\r\n\r\n","import React, { useEffect } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { saveToStorage, changeBoardBackground, } from '../../store/actions/boardActions'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faTimes } from '@fortawesome/free-solid-svg-icons'\r\n\r\n\r\nimport nature from '../../assets/images/bgs/purple_nature.jpg'\r\nimport mountains from '../../assets/images/bgs/mountains.jpg'\r\nimport water from '../../assets/images/bgs/water.jpg'\r\nimport lake from '../../assets/images/bgs/lake.jpg'\r\nimport boraBora from '../../assets/images/bgs/boraBora.jpg'\r\nimport sky from '../../assets/images/bgs/sky.jpg'\r\n\r\n\r\n\r\n\r\n\r\nexport function BoardBackground({ state, currBoard, toggleBgBoard }) {\r\n    const dispatch = useDispatch()\r\n    const close = <FontAwesomeIcon icon={faTimes} />\r\n\r\n    const changeBackgroundImg = ({ target }) => {\r\n        const name = target.name\r\n        switch (name) {\r\n            case \"nature\":\r\n                dispatch(changeBoardBackground(currBoard, 'purple_nature'))\r\n                break;\r\n            case \"mountains\":\r\n                dispatch(changeBoardBackground(currBoard, 'mountains'))\r\n                break;\r\n            case \"water\":\r\n                dispatch(changeBoardBackground(currBoard, 'water', ''))\r\n                break;\r\n            case \"lake\":\r\n                dispatch(changeBoardBackground(currBoard, 'lake', ''))\r\n                break;\r\n            case \"boraBora\":\r\n                dispatch(changeBoardBackground(currBoard, 'boraBora', ''))\r\n                break;\r\n            case \"sky\":\r\n                dispatch(changeBoardBackground(currBoard, 'sky', ''))\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n    useEffect(() => { dispatch(saveToStorage(state)) }, [state, dispatch])\r\n\r\n\r\n    return (\r\n        <div className=\"board-background \">\r\n            <div className=\"close-btn flex\">\r\n                <button onClick={toggleBgBoard}>{close}</button>\r\n            </div>\r\n            <div className=\"main-content flex align-center wrap\">\r\n                <img onClick={(e) => changeBackgroundImg(e)} src={nature} alt=\"nature\" name=\"nature\" />\r\n                <img onClick={(e) => changeBackgroundImg(e)} src={mountains} alt=\"mountains\" name=\"mountains\" />\r\n                <img onClick={(e) => changeBackgroundImg(e)} src={water} alt=\"water\" name=\"water\" />\r\n                <img onClick={(e) => changeBackgroundImg(e)} src={lake} alt=\"lake\" name=\"lake\" />\r\n                <img onClick={(e) => changeBackgroundImg(e)} src={boraBora} alt=\"boraBora\" name=\"boraBora\" />\r\n                <img onClick={(e) => changeBackgroundImg(e)} src={sky} alt=\"sky\" name=\"sky\" />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n","import React, {  useEffect } from 'react';\r\n\r\nexport function BlackScreen(props) {\r\n\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        return () => {\r\n            // componnent willUnmount\r\n\r\n        }\r\n    }, [])\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"black-screen\">\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n","import React from 'react';\r\n\r\n\r\nexport function CardCover({currCard}) {\r\n\r\n\r\n    return (\r\n        <div style={{backgroundColor:`${currCard.cardCover}`}} className=\"card-cover\">\r\n            <div className=\"main-content-card-cover\">\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { copyCard } from '../../../store/actions/cardActions'\r\n\r\n\r\nexport function CopyCard({ currBoard, currCard, onToggleCopyCard }) {\r\n\r\n    const [listOptions, setListOptions] = useState()\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const onCopyCard = ({ target }) => {\r\n        const listName = target.value\r\n        const copyToList = Object.values(currBoard.lists).filter((list) => list.title === listName)\r\n        dispatch(copyCard(currBoard, copyToList[0].id, currCard))\r\n        onToggleCopyCard()\r\n    }\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        setListOptions(Object.values(currBoard.lists))\r\n    }, [currBoard])\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"copy-card\">\r\n            {listOptions &&\r\n                <select name=\"\" onChange={(e) => onCopyCard(e)}>\r\n                    <option value=\"\">To...</option>\r\n                    {listOptions.map((list, idx) => <option key={idx}>{list.title}</option>)}\r\n                </select>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { moveCard } from '../../../store/actions/cardActions'\r\n\r\nexport function MoveCard({ currBoard, currCard, currList, onToggleMoveCard, onToggleCardDetails }) {\r\n    const [listOptions, setListOptions] = useState()\r\n    const dispatch = useDispatch()\r\n\r\n\r\n\r\n    const onMoveCard = ({ target }) => {\r\n        const listName = target.value\r\n        const moveToList = Object.values(currBoard.lists).filter((list) => list.title === listName)\r\n        const moveTocardIds = currBoard.lists[moveToList[0]?.id]?.cardIds\r\n        if (!moveTocardIds) return\r\n        if (moveTocardIds.includes(currCard.id)) return\r\n        if (moveToList[0].id === currList.id ) return\r\n        dispatch(moveCard(currBoard, moveToList[0].id, currCard, currList))\r\n        onToggleMoveCard()\r\n        onToggleCardDetails()\r\n    }\r\n\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        setListOptions(Object.values(currBoard.lists))\r\n        return () => {\r\n        }\r\n    }, [currBoard.lists])\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"copy-card\">\r\n            {listOptions &&\r\n                <select name=\"\" onChange={(e) => onMoveCard(e)}>\r\n                    <option value=\"\">To...</option>\r\n                    {listOptions.map((list, idx) => <option key={idx}>{list.title}</option>)}\r\n                </select>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\n","import React from 'react';\r\n\r\nexport function ColorPallette({ onSelectColor, onToggleColor }) {\r\n    const colors = [\r\n        { color: 'red', code: '#e04a4a' },\r\n        { color: 'lightGreen', code: '#4ae06d' },\r\n        { color: 'purpule', code: '#ab4ae0' },\r\n        { color: 'orange', code: '#f9af4d' },\r\n        { color: 'blue', code: '#3874ed' },\r\n        { color: 'yellow', code: '#ffff51' },\r\n        { color: 'noCover', code: '', text: 'None' }\r\n    ]\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"color-pallette\">\r\n            <div className=\"flex wrap space-between\">\r\n                {colors.map(color =>\r\n                    <div key={color.code} onClick={() => onSelectColor(color.code)} className=\"color\" style={{ backgroundColor: color.code }}>\r\n                        {color.text && <p>{color.text}</p>}\r\n                    </div>\r\n                )}\r\n                <button onClick={onToggleColor}>Close</button>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n","import React from 'react';\r\nimport { setCardCover } from '../../../store/actions/cardActions'\r\n\r\nimport { useDispatch } from 'react-redux';\r\nimport { ColorPallette } from '../../ColorPallette/ColorPallette'\r\nexport function CardCoverMenu({ onToggleColor, toggleCardVisibility, currCard, currBoard }) {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const onCloseCover = () => {\r\n        dispatch(setCardCover(currBoard, currCard, ''))\r\n        toggleCardVisibility()\r\n    }\r\n    const onSelectCover = (color) => {\r\n        if (color === 'noCover') return onCloseCover()\r\n        dispatch(setCardCover(currBoard, currCard, color))\r\n    }\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"card-cover-menu\">\r\n            <div className=\"top-part flex space-between\">\r\n            </div>\r\n            <ColorPallette\r\n                onCloseColor={onCloseCover}\r\n                onSelectColor={onSelectCover}\r\n                currCard={currCard}\r\n                currBoard={currBoard}\r\n                onToggleColor={onToggleColor}\r\n                toggleCardVisibility={toggleCardVisibility} />\r\n        </div>\r\n    )\r\n}\r\n\r\n","import React, { useEffect, useRef } from 'react';\r\nimport { useForm } from \"react-hook-form\";\r\n\r\nexport function AddCheckList({ onToggleCheckList, onAddCheckList }) {\r\n    const { register, handleSubmit } = useForm();\r\n    const checklistName = useRef(null)\r\n\r\n    useEffect(() => {\r\n        checklistName.current.focus();\r\n        return () => {\r\n            \r\n        }\r\n    }, [])\r\n\r\n\r\n    return (\r\n        <div className=\"add-check-list\">\r\n            <form onSubmit={handleSubmit(onAddCheckList)}>\r\n                <input style={{ marginBlockEnd: '5px' }} autoComplete=\"off\" ref={(e) => {\r\n                    register(e)\r\n                    checklistName.current = e\r\n                }} name=\"checklistName\" type=\"text\" />\r\n                <div className=\"check-list-btns flex space-between\">\r\n                    <button style={{backgroundColor:\"rgb(76, 187, 61)\"}}>Add</button>\r\n                    <button onClick={onToggleCheckList}>Cancel</button>\r\n\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\n","import React from 'react';\r\nimport { ColorPallette } from '../../ColorPallette/ColorPallette';\r\n\r\nexport function LabelsMenu({  onToggleColor ,onSetLabel}) {\r\n    return (\r\n        <div className=\"labels-menu\">\r\n            <ColorPallette onToggleColor={onToggleColor} onSelectColor={onSetLabel} />\r\n        </div>\r\n    )\r\n}\r\n\r\n","import React, { useEffect, useState } from 'react';\r\nimport { CopyCard } from '../CopyCard/CopyCard'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faUser, faTag, faTasks, faColumns, faClock, faPaperclip, faArrowRight, faCopy, faEye, faTrashAlt, faShareAlt, } from '@fortawesome/free-solid-svg-icons'\r\nimport { MoveCard } from '../MoveCard/MoveCard';\r\nimport { DeleteVerify } from '../DeleteVerify/DeleteVerify'\r\nimport { CardCoverMenu } from '../CardCoverMenu/CardCoverMenu'\r\nimport { createCheckList, setDueDate, deleteCard, setLabel, removeLabel } from '../../../store/actions/cardActions'\r\nimport { useDispatch } from 'react-redux';\r\nimport Calendar from 'react-calendar';\r\nimport 'react-calendar/dist/Calendar.css'\r\nimport { AddCheckList } from './AddCheckList/AddCheckList';\r\nimport { LabelsMenu } from '../LabelsMenu/LabelsMenu';\r\n\r\n\r\nexport function RightSideMenu({ onToggleCardDetails, onToggleCover, isCoverOn,\r\n    listid,\r\n    currBoard,\r\n    currCard,\r\n    toggleCardVisibility,\r\n    onToggleCardWatch,\r\n}) {\r\n    const currList = currBoard.lists[listid]\r\n    const cardId = currCard.id\r\n    const [isCopyClicked, setCopyClick] = useState(false)\r\n    const [isMoveClicked, setMoveClick] = useState(false)\r\n    const [isDeleteClicked, setDeleteClick] = useState(false)\r\n    const [isAddCheckList, setAddChecklist] = useState(false)\r\n    const [isLabelMenuVis, setLabelMenuVis] = useState(false)\r\n    const dispatch = useDispatch()\r\n    const [date, setDates] = useState(new Date())\r\n    const [isCalShown, toggleShowCal] = useState(false)\r\n\r\n    const avatar = <FontAwesomeIcon icon={faUser} />\r\n    const label = <FontAwesomeIcon icon={faTag} />\r\n    const checklist = <FontAwesomeIcon icon={faTasks} />\r\n    const clock = <FontAwesomeIcon icon={faClock} />\r\n    const paperClip = <FontAwesomeIcon icon={faPaperclip} />\r\n    const arrow = <FontAwesomeIcon icon={faArrowRight} />\r\n    const copy = <FontAwesomeIcon icon={faCopy} />\r\n    const eye = <FontAwesomeIcon icon={faEye} />\r\n    const trash = <FontAwesomeIcon icon={faTrashAlt} />\r\n    const share = <FontAwesomeIcon icon={faShareAlt} />\r\n    const cover = <FontAwesomeIcon icon={faColumns} />\r\n\r\n\r\n    const onToggleLabelMenu = () => {\r\n        setLabelMenuVis(!isLabelMenuVis)\r\n    }\r\n\r\n    const onSetLabel = (colorCode) => {\r\n        const index = currCard.labels.findIndex((label) => { return label === colorCode })\r\n        if (index >= 0) {\r\n            dispatch(removeLabel(currBoard, currCard, index))\r\n            return\r\n        }\r\n        dispatch(setLabel(currBoard, currCard, colorCode))\r\n    }\r\n\r\n    const onToggleDeleteCard = () => {\r\n        setDeleteClick(!isDeleteClicked)\r\n    }\r\n\r\n    const onDeleteCard = () => {\r\n        dispatch(deleteCard(currBoard, currList, cardId))\r\n        onToggleCardDetails()\r\n    }\r\n\r\n    const onToggleCopyCard = () => {\r\n        setCopyClick(!isCopyClicked)\r\n    }\r\n    const onToggleMoveCard = () => {\r\n        setMoveClick(!isMoveClicked)\r\n    }\r\n\r\n    const onToggleCheckList = () => {\r\n        setAddChecklist(!isAddCheckList)\r\n    }\r\n\r\n    const onAddCheckList = ({ checklistName }) => {\r\n        if (!checklistName) return\r\n        dispatch(createCheckList(currBoard, currCard, checklistName))\r\n        onToggleCheckList()\r\n    }\r\n    const onGetDates = date => {\r\n        const newDate = date.toString().substring(0, 15)\r\n        setDates(date)\r\n        dispatch(setDueDate(currBoard, currCard, newDate))\r\n        toggleShowCal(false)\r\n    }\r\n\r\n    const onToggleShowCal = () => {\r\n        toggleShowCal(!isCalShown)\r\n    }\r\n\r\n    useEffect(() => { }, [currBoard])\r\n\r\n\r\n\r\n    return (\r\n\r\n        <div className=\"right-side-menu flex column\">\r\n            <div className=\"btn-container\">\r\n                <p>SUGGESTED</p>\r\n                <button className=\"btn-right-side\">\r\n                    <span>\r\n                        {avatar}\r\n                    </span>\r\n                Join</button>\r\n            </div>\r\n            <div className=\"btn-container\">\r\n                <p>ADD TO CARD</p>\r\n                <button className=\"btn-right-side\">\r\n                    <span>\r\n                        {avatar}\r\n                    </span>\r\n                    Members\r\n            </button>\r\n            </div>\r\n            <button onClick={onToggleLabelMenu} className=\"btn-right-side\">\r\n                <span>{label}</span>\r\n                Labels\r\n                </button>\r\n            { isLabelMenuVis && <LabelsMenu onSetLabel={onSetLabel} onToggleColor={onToggleLabelMenu} currBoard={currBoard} currCard={currCard} />}\r\n            <button onClick={onToggleCheckList} className=\"btn-right-side\">\r\n                <span>{checklist}</span>\r\n                Checklist\r\n                </button>\r\n            {isAddCheckList &&\r\n                <AddCheckList\r\n                    onToggleCheckList={onToggleCheckList}\r\n                    onAddCheckList={onAddCheckList} />\r\n            }\r\n            <button onClick={onToggleShowCal} className=\"btn-right-side\">\r\n                <span>{clock}</span>\r\n                Due Date\r\n                </button>\r\n            {isCalShown && <div className=\"cal\">\r\n                <Calendar className=\"calendar\"\r\n                    onChange={onGetDates}\r\n                    value={date}\r\n                />\r\n            </div>\r\n            }\r\n            <button className=\"btn-right-side\">\r\n                <span>\r\n                    {paperClip}\r\n                </span>\r\n                Attachment\r\n                </button>\r\n            <button className=\"btn-right-side\" onClick={onToggleCover}>\r\n                <span>\r\n                    {cover}\r\n                </span>\r\n                Cover\r\n                </button>\r\n            {isCoverOn &&\r\n                <CardCoverMenu\r\n                    currCard={currCard}\r\n                    toggleCardVisibility={toggleCardVisibility}\r\n                    currBoard={currBoard}\r\n                    onToggleColor={onToggleCover}\r\n                />\r\n            }\r\n\r\n            <p>ACTIONS</p>\r\n\r\n            <div className=\"right-side-btn flex column\">\r\n                <div className=\"btn-part flex\">\r\n                    <button className=\"btn-right-side\" onClick={onToggleMoveCard}>\r\n                        <span>\r\n                            {arrow}\r\n                        </span>\r\n                    Move\r\n                    </button>\r\n                </div>\r\n                {isMoveClicked && <MoveCard cardId={cardId}\r\n                    listid={listid}\r\n                    currBoard={currBoard}\r\n                    currCard={currCard}\r\n                    currList={currList}\r\n                    onToggleMoveCard={onToggleMoveCard}\r\n                    onToggleCardDetails={onToggleCardDetails}\r\n                />\r\n                }\r\n            </div>\r\n            <div className=\"right-side-btn flex column\">\r\n                <div className=\"btn-part flex\">\r\n                    <button className=\"btn-right-side\" onClick={onToggleCopyCard}>\r\n                        <span>\r\n                            {copy}\r\n                        </span>\r\n                    Copy\r\n                    </button>\r\n                </div>\r\n                {isCopyClicked && <CopyCard cardId={cardId}\r\n                    listid={listid}\r\n                    currBoard={currBoard}\r\n                    currCard={currCard}\r\n                    onToggleCopyCard={onToggleCopyCard}\r\n                />\r\n                }\r\n            </div>\r\n            <button onClick={onToggleCardWatch} className=\"btn-right-side flex space-between align-center\">\r\n                <div className=\"flex\">\r\n                    <span>\r\n                        {eye}\r\n                    </span>\r\n                    Watch\r\n                </div>\r\n                {currCard.isWatched &&\r\n                    <span className=\"watched flex align-center justify-center\">V</span>\r\n                }\r\n            </button>\r\n            <div className=\"right-side-btn flex column\">\r\n                <div className=\"btn-part flex\">\r\n\r\n                    <button className=\"btn-right-side\" onClick={onToggleDeleteCard}>\r\n                        <span>\r\n                            {trash}\r\n                        </span>\r\n                        Delete\r\n                    </button>\r\n                </div>\r\n                {isDeleteClicked &&\r\n                    <DeleteVerify onDelete={onDeleteCard}\r\n                        onToggle={onToggleDeleteCard}\r\n                        itemToDelete={'card'}\r\n                    />\r\n                }\r\n\r\n            </div>\r\n\r\n\r\n            <button className=\"btn-right-side\">\r\n                <span>\r\n                    {share}\r\n                </span>\r\n                Share\r\n                </button>\r\n        </div>\r\n    )\r\n}\r\n\r\n","import React from 'react';\r\n\r\nexport function ProgressBar({ bgcolor, completed }) {\r\n\r\n    const fillerStyles = {\r\n        width: `${completed}%`,\r\n        backgroundColor: bgcolor,\r\n        borderRadius: 'inherit',\r\n        textAlign: 'right'\r\n    }\r\n\r\n    const labelStyles = {\r\n        fontWeight: 'bold'\r\n    }\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"progress-bar flex align-center\">\r\n            <span style={labelStyles}>{` ${completed}%  `}</span>\r\n            <div></div>\r\n            <div className=\"wrapper\" style={fillerStyles}>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n","import React, { useEffect } from 'react';\r\n\r\n\r\nexport function ItemPreview({ onCheckItem, item, onRemoveCheckListItem, trash }) {\r\n    \r\n    useEffect(() => {\r\n        return () => {\r\n            \r\n        }\r\n    }, [])\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"item-preview\">\r\n            <div\r\n                key={item.id} className=\"main-content-checkbox flex space-between align-center\">\r\n                <div className=\"checkbox-container flex\">\r\n                    <input onChange={() => onCheckItem(item)} checked={item.isChecked} type=\"checkbox\" value={item.text} /> <p>\r\n                        {item.text}\r\n                    </p>\r\n                </div>\r\n                <button onClick={() => onRemoveCheckListItem(item)}><span>{trash}</span></button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n","import React, { useEffect, useState, useRef } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { removeCheckList, addCheckListItem, removeCheckListItem, checkItem } from '../../../store/actions/cardActions'\r\nimport { ProgressBar } from '../../ProgressBar/ProgressBar'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faTasks, faTrashAlt } from '@fortawesome/free-solid-svg-icons'\r\nimport { ActionForm } from '../../ActionForm/ActionForm';\r\nimport { useCallback } from 'react';\r\nimport { ItemPreview } from './ItemPreview/ItemPreview'\r\n\r\nexport function CardCheckList({ currCheckList, currCard, currBoard }) {\r\n    const checklistName = currCheckList.name\r\n    const [isAddItemVisible, setItemVisible] = useState(false)\r\n    const [checkedItems, setCheckItems] = useState([])\r\n    const [currCheckItem, setCurrCheckItem] = useState()\r\n    const [completed, setCompleted] = useState(0)\r\n    const dispatch = useDispatch()\r\n    const itemName = useRef(null);\r\n\r\n    const trash = <FontAwesomeIcon icon={faTrashAlt} />\r\n    const checklist = <FontAwesomeIcon icon={faTasks} />\r\n\r\n    const onAddCheckItem = ({ listItem }) => {\r\n        if (!listItem) return\r\n        dispatch(addCheckListItem(currBoard, currCard, currCheckList, listItem))\r\n        onToggleItemVisibility()\r\n    }\r\n\r\n\r\n    const onRemoveCheckList = () => { dispatch(removeCheckList(currBoard, currCard, currCheckList)) }\r\n\r\n    const onRemoveCheckListItem = useCallback(\r\n        (item) => {\r\n            const index = checkedItems.findIndex((checkedItem) => checkedItem.id === item.id)\r\n            dispatch(removeCheckListItem(currBoard, currCard, currCheckList, item))\r\n            let newCheckedItems = checkedItems\r\n            newCheckedItems.splice(index, 1)\r\n            setCheckItems([...newCheckedItems])\r\n        },\r\n        [currBoard, currCard, currCheckList, dispatch, checkedItems]\r\n    )\r\n\r\n    const onToggleItemVisibility = () => {\r\n        setItemVisible(!isAddItemVisible)\r\n    }\r\n\r\n\r\n    const onCheckItem = (item) => {\r\n        const currItem = currCheckList.list[item.id]\r\n        setCurrCheckItem(currItem)\r\n        const index = checkedItems.findIndex((checkedItem) => checkedItem.id === item.id)\r\n        if (item.isChecked) {\r\n            let newCheckedItems = checkedItems\r\n            newCheckedItems.splice(index, 1)\r\n            setCheckItems([...newCheckedItems])\r\n            dispatch(checkItem(currBoard, currCard, currCheckList, currItem))\r\n            calculatePercentage()\r\n            return\r\n        }\r\n\r\n        setCheckItems([...checkedItems, { ...item }])\r\n        dispatch(checkItem(currBoard, currCard, currCheckList, currItem))\r\n        calculatePercentage()\r\n    }\r\n\r\n\r\n    const calculatePercentage = useCallback(\r\n        () => {\r\n            var numberOfCheckLists = Object.values(currCheckList.list).length;\r\n            var numberOfCehckedItems = checkedItems.length;\r\n            var percent = (numberOfCehckedItems * 100) / numberOfCheckLists;\r\n            isNaN(percent) ? setCompleted(0) : setCompleted(percent.toFixed())\r\n        },\r\n        [currCheckList.list, checkedItems.length],\r\n    )\r\n\r\n    const updatePercentageOnMount = useCallback(\r\n        () => {\r\n            const keys = Object.keys(currCheckList.list)\r\n            const lists = []\r\n            const checkedItems = []\r\n\r\n            keys.forEach((key) => {\r\n                lists.push(currCheckList.list[key])\r\n            })\r\n            lists.forEach((item) => {\r\n                if (item.isChecked) {\r\n                    checkedItems.push(item)\r\n                    setCheckItems([...checkedItems])\r\n                }\r\n\r\n            })\r\n\r\n        },\r\n        [currCheckList.list],\r\n    )\r\n\r\n    useEffect(() => {\r\n        calculatePercentage()\r\n    }, [calculatePercentage, currCheckItem, currCheckList])\r\n\r\n\r\n    useEffect(() => {\r\n        updatePercentageOnMount()\r\n    }, [updatePercentageOnMount])\r\n\r\n\r\n    return (\r\n        <div className=\"card-check-list\">\r\n            <div className=\"card-check-list-section flex space-between\">\r\n                <div className=\"title-container flex align-center\">\r\n\r\n                    <div className=\"icon\">\r\n                        {checklist}\r\n                    </div>\r\n                    <div className=\"check-list-title\">\r\n                        <h3>{checklistName}</h3>\r\n                    </div>\r\n                </div>\r\n                <p className=\"delete-checklist\" onClick={onRemoveCheckList}>Delete</p>\r\n            </div>\r\n            <ProgressBar bgcolor=\"#c9c9ca\" completed={completed} />\r\n            <div className=\"list\">\r\n                {Object.values(currCheckList.list).map(item =>\r\n                    <ItemPreview key={item.id} onCheckItem={onCheckItem} onRemoveCheckListItem={onRemoveCheckListItem} trash={trash} item={item} />\r\n                )}\r\n            </div>\r\n            {!isAddItemVisible &&\r\n                <div className=\"add-item-btn\">\r\n                    <button onClick={onToggleItemVisibility}>Add an item</button>\r\n                </div>\r\n            }\r\n            <div className=\"check-list-action\">\r\n                {\r\n                    isAddItemVisible &&\r\n                    <ActionForm currRef={itemName} toggleAdd={onToggleItemVisibility} onSubmitFunc={onAddCheckItem} name={'listItem'} placeholder={'Item title'} />\r\n                }\r\n            </div>\r\n        </div >\r\n    )\r\n}\r\n\r\n","import React, { useEffect } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useForm } from \"react-hook-form\";\r\nimport { setCardDesc } from '../../../../store/actions/cardActions'\r\n\r\n\r\n\r\n\r\nexport function AddDescription({ currCard, currBoard, onToggleCardDesc }) {\r\n    //   const state = useSelector(state => state.state)\r\n    const dispatch = useDispatch()\r\n    // const [isDescClicked, setDescClicked] = useState(false)\r\n    const { register, handleSubmit } = useForm();\r\n\r\n\r\n\r\n\r\n\r\n\r\n    const onCancel = () => {\r\n        onToggleCardDesc()\r\n    }\r\n\r\n    const onAddDesc = ({ desc }) => {\r\n        dispatch(setCardDesc(currBoard, currCard, desc))\r\n        onToggleCardDesc()\r\n    }\r\n\r\n    useEffect(() => {\r\n        return () => {\r\n            // componnent willUnmount\r\n        }\r\n    }, [])\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"add-description\">\r\n            <form onSubmit={handleSubmit(onAddDesc)}>\r\n                <textarea defaultValue={currCard.desc} name=\"desc\" ref={register} cols=\"30\" rows=\"10\"></textarea>\r\n                <div className=\"btns flex space-between\">\r\n                    <button style={{backgroundColor:\"rgb(76, 187, 61)\"}}>Save</button>\r\n                    <button onClick={onCancel}>X</button>\r\n                </div>\r\n            </form>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\n","import React from 'react';\r\nimport { AddDescription } from '.././Description/AddDescription/AddDescription'\r\n\r\nexport function Description({ isDescVisible, clipBoard, currBoard, currCard, onToggleCardDesc }) {\r\n\r\n\r\n    return (\r\n        <div className=\"description flex\">\r\n            <div className=\"icon\">\r\n                {clipBoard}\r\n            </div>\r\n            <div className=\"description-title\">\r\n                <h3>Description</h3>\r\n                {!isDescVisible &&\r\n                    <div onClick={onToggleCardDesc} className=\"card-description-box\">\r\n                        <p>{currCard.desc}</p>\r\n                    </div>\r\n                }\r\n                {isDescVisible &&\r\n                    <AddDescription onToggleCardDesc={onToggleCardDesc}\r\n                        currBoard={currBoard} currCard={currCard} />\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n","import React, { useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { toggleCardDetails, toggleCardWatch, setDueDate, changeCardTitle } from '../../store/actions/cardActions'\r\nimport { useHistory, useParams } from 'react-router-dom'\r\nimport { BlackScreen } from '../CardDetails/BlackScreen/BlackScreen'\r\nimport { CardCover } from './CardCover/CardCover'\r\nimport { RightSideMenu } from './RightSideMenu/RightSideMenu'\r\nimport { CardCheckList } from './CardCheckList/CardCheckList'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faPencilAlt, faTicketAlt, faClipboardList, faEye } from '@fortawesome/free-solid-svg-icons'\r\nimport { Description } from './Description/Description';\r\nimport { CardLabel } from './CardLabel/CardLabel';\r\n\r\n\r\nexport function CardDetails() {\r\n    const state = useSelector(state => state.mainStore)\r\n    const { boardid, cardid, listid } = useParams();\r\n    const currBoard = state.boards[boardid]\r\n    const currCard = currBoard.cards[cardid]\r\n    const [isCoverOn, setCoverOn] = useState(false)\r\n    const [istCoverVisibile, setCoverVisibility] = useState(false)\r\n    const [isDescVisible, setDescVisibility] = useState(false)\r\n    const [newCardTitle, setCardTitle] = useState({ title: '' })\r\n    const dispatch = useDispatch()\r\n    const history = useHistory()\r\n    const [isCardTitleChange, onSetCardTitle] = useState(false)\r\n    const currCheckList = currCard? Object.values(currCard.checklist):''\r\n    const [isMouseOver, setMouseOver] = useState(false)\r\n\r\n    const ticket = <FontAwesomeIcon icon={faTicketAlt} />\r\n    const clipBoard = <FontAwesomeIcon icon={faClipboardList} />\r\n    const eye = <FontAwesomeIcon icon={faEye} />\r\n    const pencil = <FontAwesomeIcon icon={faPencilAlt} />\r\n\r\n\r\n    const onToggleCardDetails = () => {\r\n        dispatch(toggleCardDetails(false))\r\n        history.push(`/boards/${boardid}`)\r\n    }\r\n\r\n\r\n    const onToggleCover = () => {\r\n        setCoverOn(!isCoverOn)\r\n    }\r\n\r\n    const toggleCardVisibility = () => {\r\n        setCoverVisibility(!istCoverVisibile)\r\n    }\r\n\r\n    const onToggleCardDesc = () => {\r\n        setDescVisibility(!isDescVisible)\r\n    }\r\n\r\n\r\n    const onToggleCardWatch = () => {\r\n        const isWatched = currCard.isWatched\r\n        dispatch(toggleCardWatch(currBoard, currCard, !isWatched))\r\n    }\r\n\r\n    const onRemoveDate = () => {\r\n        dispatch(setDueDate(currBoard, currCard, ''))\r\n    }\r\n\r\n\r\n\r\n    const onHandleChange = ({ target }) => {\r\n        const key = target.name\r\n        const value = target.value\r\n        newCardTitle[key] = value\r\n        setCardTitle((prevState) => ({\r\n            ...prevState,\r\n            title: value\r\n        }))\r\n    };\r\n\r\n    const onChangeTitle = (ev) => {\r\n        const cardTitle = newCardTitle.title\r\n        ev.preventDefault()\r\n        dispatch(changeCardTitle(currCard, cardTitle, currBoard))\r\n        onSetCardTitle(false)\r\n    }\r\n\r\n\r\n    if (!currCard) return ''\r\n    return (\r\n        <div className=\"card-details\" >\r\n            <span onClick={onToggleCardDetails} >\r\n                <BlackScreen />\r\n            </span>\r\n            <div className=\"card-details-board \">\r\n                {currCard.cardCover &&\r\n                    <CardCover currCard={currCard} onToggleCover={onToggleCover} />\r\n                }\r\n                <div className=\"main flex space-between\">\r\n                    <div className=\"left-side\">\r\n                        <div className=\"title-section \">\r\n                            <div style={{ height: 'fit-content' }} className=\"align-center flex\">\r\n                                <div className=\"icon\">\r\n                                    {ticket}\r\n                                </div>\r\n                                <div onMouseEnter={() => setMouseOver(true)} onMouseLeave={() => setMouseOver(false)} onClick={() => onSetCardTitle(true)} className=\"title\">\r\n                                    {!isCardTitleChange &&\r\n                                        <div className=\"flex\">\r\n                                            <h3 >{currCard.title} </h3>\r\n                                            {isMouseOver &&\r\n                                                <div className=\"edit-title-pencil\">\r\n                                                    {pencil}\r\n                                                </div>\r\n                                            }\r\n                                        </div>\r\n                                    }\r\n                                </div>\r\n\r\n                                {isCardTitleChange &&\r\n                                    <div className=\"flex\">\r\n\r\n                                        <form onSubmit={onChangeTitle}>\r\n                                            <input autoComplete=\"off\" onChange={onHandleChange} name=\"title\" placeholder={currCard.title} type=\"text\" />\r\n                                        </form>\r\n                                        <button onClick={() => onSetCardTitle(false)}>Cancel</button>\r\n                                    </div>\r\n                                }\r\n                                {currCard.isWatched &&\r\n                                    <div className=\"watched-section\">\r\n                                        {eye}\r\n                                    </div>\r\n                                }\r\n                            </div>\r\n                            {currCard.dueDate &&\r\n                                <div className=\"due-date-section margin-bottom flex space-between\">\r\n                                    <p>{currCard.dueDate}</p>\r\n                                    <p className=\"remove-date\" onClick={onRemoveDate}>Remove Date</p>\r\n                                </div>\r\n                            }\r\n                        </div>\r\n                        <section className=\"labels\">\r\n                            {currCard.labels.length > 0 &&\r\n                                <div>\r\n                                    <p>Labels</p>\r\n                                    <div className=\"flex\">\r\n                                        {currCard.labels.map(label => {\r\n                                            return <CardLabel key={label} label={label} />\r\n                                        })}\r\n                                    </div>\r\n                                </div>\r\n                            }\r\n\r\n                        </section>\r\n                        <section className=\"description-section\">\r\n                            <Description clipBoard={clipBoard} isDescVisible={isDescVisible} currBoard={currBoard} currCard={currCard}\r\n                                onToggleCardDesc={onToggleCardDesc} />\r\n                        </section>\r\n                        <section className=\"checkList-section\">\r\n                            {currCheckList.length > 0 &&\r\n                                currCheckList.map(checklist => <div key={checklist.id} >\r\n                                    <CardCheckList currCheckList={checklist} currBoard={currBoard} currCard={currCard} />\r\n                                </div>)\r\n                            }\r\n                        </section>\r\n                    </div>\r\n                    <div className=\"right-side\">\r\n                        <RightSideMenu\r\n                            className=\"right-side\"\r\n                            listid={listid}\r\n                            currBoard={currBoard}\r\n                            currCard={currCard}\r\n                            toggleCardVisibility={toggleCardVisibility}\r\n                            istCoverVisibile={istCoverVisibile}\r\n                            onToggleCardDetails={onToggleCardDetails}\r\n                            onToggleCardWatch={onToggleCardWatch}\r\n                            onToggleCover={onToggleCover}\r\n                            isCoverOn={isCoverOn}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\n","import React, { useRef } from 'react';\r\nimport { useForm } from \"react-hook-form\";\r\nimport { createList } from '../../store/actions/boardActions'\r\n\r\nimport { useDispatch } from 'react-redux';\r\nimport { ActionForm } from '../ActionForm/ActionForm';\r\n\r\nexport function AddList({ currBoard, onToggleAddList }) {\r\n    const dispatch = useDispatch()\r\n    const { reset } = useForm();\r\n    const listName = useRef(null);\r\n\r\n\r\n    const onCreateList = (data) => {\r\n        if (!data.listName) return\r\n        dispatch(createList(currBoard.id, data.listName))\r\n        reset()\r\n        onToggleAddList()\r\n\r\n    }\r\n\r\n    return (\r\n        <div className=\"add-list \">\r\n            <ActionForm\r\n                name={\"listName\"}\r\n                currRef={listName}\r\n                toggleAdd={onToggleAddList}\r\n                placeholder={'Enter list title'}\r\n                onSubmitFunc={onCreateList} />\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\n","import React, { useState, useEffect, useCallback, useRef } from 'react';\r\nimport styled from 'styled-components'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useParams } from 'react-router-dom'\r\nimport { List } from '../List/List'\r\nimport {\r\n    dragInsideList,\r\n    saveToStorage,\r\n    dragOutsideList,\r\n    dragList,\r\n    setActiveBoard,\r\n    toggleBgSide\r\n} from '../../store/actions/boardActions'\r\n// import { toggleCardDetails } from '../../store/actions/cardActions'\r\nimport { DragDropContext, Droppable } from 'react-beautiful-dnd'\r\nimport { BoardBackground } from '../../cmps/BoardBackground/BoardBackground'\r\nimport { CardDetails } from '../CardDetails/CardDetails'\r\nimport { BlackScreen } from '../CardDetails/BlackScreen/BlackScreen'\r\nimport { AddList } from '../AddList/AddList'\r\n\r\n\r\nexport function Board() {\r\n    const state = useSelector(state => state.mainStore)\r\n    const { isCardDetailShown, isBgSideOpen } = state\r\n    const [isAddListVisible, setAddList] = useState(false)\r\n    const [currBoard, setCurrBoard] = useState()\r\n\r\n    const { boardid } = useParams();\r\n    const dispatch = useDispatch()\r\n    const boardRef = useRef(null)\r\n\r\n    const loadCurrBoard = useCallback(() => {\r\n        const currBoard = state.boards[boardid]\r\n        setCurrBoard(currBoard)\r\n        dispatch(setActiveBoard(currBoard))\r\n    },\r\n        [state.boards, boardid, dispatch,]\r\n    )\r\n\r\n\r\n\r\n    const onDragEnd = (result) => {\r\n        const { destination, source, draggableId, type } = result;\r\n\r\n        if (!destination) { return }\r\n        if (\r\n            destination.droppableId === source.droppableId &&\r\n            destination.index === source.index\r\n        ) return\r\n\r\n        const start = currBoard.lists[source.droppableId]\r\n        const finish = currBoard.lists[destination.droppableId]\r\n\r\n        if (start === finish && !type === 'list') {\r\n            dispatch(dragInsideList(start, source, destination, draggableId, currBoard))\r\n            return\r\n        }\r\n        if (type === 'list') {\r\n            dispatch(dragList(source, destination, draggableId, currBoard))\r\n            return\r\n        }\r\n        dispatch(dragOutsideList(start, source, destination, draggableId, currBoard, finish))\r\n\r\n    }\r\n\r\n\r\n\r\n    const toggleBgBoard = () => {\r\n        dispatch(toggleBgSide())\r\n    }\r\n\r\n    const onToggleAddList = () => {\r\n        setAddList(!isAddListVisible)\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        loadCurrBoard()\r\n        return () => {\r\n            dispatch(setActiveBoard(''))\r\n        }\r\n\r\n    }, [loadCurrBoard, dispatch])\r\n\r\n    useEffect(() => { dispatch(saveToStorage(state)) }, [state, dispatch, currBoard])\r\n\r\n\r\n    if (!currBoard) return '...LOADING...'\r\n    return (\r\n        <DragDropContext\r\n            onDragEnd={onDragEnd}\r\n        >\r\n            <Droppable\r\n                droppableId=\"all-lists\"\r\n                direction=\"horizontal\"\r\n                type=\"list\"\r\n                className=\"droppable-board\"\r\n            >\r\n                {(provided) => {\r\n                    return (\r\n                        <div ref={boardRef} className=\"board margin-center align-center\">\r\n                            <img className=\"board-background\" src={require(`../../assets/images/bgs/${currBoard.backgroundImg}.jpg`)} alt=\"\" />\r\n                            <MainDndArea\r\n                                {...provided.droppableProps}\r\n                                ref={provided.innerRef}\r\n                            >\r\n                                <div className=\"main-content flex \">\r\n                                    {currBoard.listOrder.map((listId, idx) => {\r\n                                        return <div key={listId} className=\"list-section\">\r\n                                            <List index={idx} cards={currBoard.cards} currBoard={currBoard} lists={currBoard.lists} listId={listId}></List>\r\n                                        </div>\r\n                                    })}\r\n                                    {!isAddListVisible &&\r\n                                        <button onClick={onToggleAddList} className=\"add-list-btn\">Add list</button>\r\n                                    }\r\n                                    {isAddListVisible &&\r\n                                        <AddList currBoard={currBoard} onToggleAddList={onToggleAddList} />\r\n                                    }\r\n                                </div>\r\n                                {isBgSideOpen &&\r\n                                    <span onClick={toggleBgBoard} >\r\n                                        <BlackScreen />\r\n                                    </span>\r\n                                }\r\n                                <div className=\"between\">\r\n                                    <div className={`board-bg ${isBgSideOpen ? 'visible' : ''} `}>\r\n                                        <BoardBackground toggleBgBoard={toggleBgBoard} currBoard={currBoard} state={state} />\r\n                                    </div>\r\n                                </div>\r\n                                {provided.placeholder}\r\n\r\n                            </MainDndArea>\r\n                            {isCardDetailShown &&\r\n                                <CardDetails currBoard={currBoard} />\r\n                            }\r\n\r\n                        </div>\r\n                    )\r\n                }}\r\n            </Droppable>\r\n        </DragDropContext >\r\n    )\r\n}\r\n\r\n\r\n\r\nconst MainDndArea = styled.div`\r\n    width: 100 %;\r\n    `;","import React from 'react';\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport './style/style.scss'\r\nimport { HomePage } from './pages/HomePage/HomePage'\r\nimport { AppHeader } from './cmps/AppHeader/AppHeader'\r\nimport { Board } from './cmps/Board/Board';\r\nfunction App() {\r\n\r\n  return (\r\n    <div className=\"App \">\r\n      <AppHeader/>\r\n\r\n      <Switch>\r\n      <Route component={HomePage} exact path=\"/\" />\r\n        <Route component={Board} path=\"/boards/:boardid/:listid?/:cardid?\"/>\r\n      </Switch>\r\n      {/* <Footer/> */}\r\n    </div>\r\n\r\n  );\r\n}\r\n\r\nexport default App;\r\n\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","export default  {\r\n    'board-1': {\r\n        id: 'board-1',\r\n        name: 'Demo-Board',\r\n        isFav: false,\r\n        cards: {\r\n            'card-1-id': {\r\n                id: 'card-1-id',\r\n                title: 'Go to the groceries store',\r\n                desc: 'Click here to change the description',\r\n                isWatched: true,\r\n                dueDate: \"Sun Dec 27 2020\",\r\n                checklist: {\r\n                    'check-1': {\r\n                        id: 'check-1',\r\n                        name: 'checklist-1',\r\n                        list: {\r\n                            'firstOne': {\r\n                                id: 'firstOne', text: 'toDo-chelcklist', isChecked: false\r\n                            },\r\n                            'secondOne': {\r\n                                id: 'secondOne', text: 'Do-Not-Forget', isChecked: true\r\n                            }\r\n                        }\r\n                    },\r\n                    'check-2': {\r\n                        id: 'check-2',\r\n                        name: 'checklist-2',\r\n                        list: {\r\n                            'firstOne': { id: 'firstOne', text: 'firstOne', isChecked: false }, 'secondOne': { id: 'secondOne', text: 'secondOne', isChecked: false }\r\n                        }\r\n                    }\r\n                },\r\n                cardCover: \"#4ae06d\",\r\n                labels: [\"#e04a4a\",]\r\n            },\r\n            'card-2': {\r\n                id: 'card-2',\r\n                title: 'Watch the kids',\r\n                desc: 'Click here to change the description',\r\n                isWatched: true,\r\n                dueDate: \"Sun Dec 27 2020\",\r\n                checklist: {\r\n                    'check-1': {\r\n                        id: 'check-1',\r\n                        name: 'checklist-1',\r\n                        list: {\r\n                            'firstOne': {\r\n                                id: 'firstOne', text: 'firstOne', isChecked: false\r\n                            },\r\n                            'secondOne': {\r\n                                id: 'secondOne', text: 'secondOne', isChecked: true\r\n                            }\r\n                        }\r\n                    },\r\n                    'check-2': {\r\n                        id: 'check-2',\r\n                        name: 'checklist-2',\r\n                        list: {\r\n                            'firstOne': { id: 'firstOne', text: 'firstOne', isChecked: true }, 'secondOne': { id: 'secondOne', text: 'secondOne', isChecked: true }\r\n                        }\r\n                    }\r\n                },\r\n                cardCover: \"#3874ed\",\r\n                labels: [\"#e04a4a\", \"#f9af4d\", \"#3874ed\", \"#ffff51\"]\r\n            },\r\n            'card-3': {\r\n                id: 'card-3',\r\n                title: 'Get new keyboard',\r\n                desc: 'Buy on Micorosoft keyboard!',\r\n                isWatched: true,\r\n                dueDate: \"Sun Dec 27 2020\",\r\n                checklist: {\r\n                    'check-1': {\r\n                        id: 'check-1',\r\n                        name: 'checklist-1',\r\n                        list: {\r\n                            'firstOne': {\r\n                                id: 'firstOne', text: 'firstOne', isChecked: false\r\n                            },\r\n                            'secondOne': {\r\n                                id: 'secondOne', text: 'secondOne', isChecked: true\r\n                            }\r\n                        }\r\n                    },\r\n                    'check-2': {\r\n                        id: 'check-2',\r\n                        name: 'checklist-2',\r\n                        list: {\r\n                            'firstOne': { id: 'firstOne', text: 'firstOne', isChecked: true }, 'secondOne': { id: 'secondOne', text: 'secondOne', isChecked: false }\r\n                        }\r\n                    }\r\n                },\r\n                cardCover: \"#ab4ae0\",\r\n                labels: [\"#4ae06d\",]\r\n            },\r\n            'card-4': {\r\n                id: 'card-4',\r\n                title: 'Get new shirt',\r\n                desc: 'Click here to change the description',\r\n                isWatched: true,\r\n                dueDate: \"Sun Dec 27 2020\",\r\n                checklist: {\r\n                    'check-1': {\r\n                        id: 'check-1',\r\n                        name: 'checklist-1',\r\n                        list: {\r\n                            'firstOne': {\r\n                                id: 'firstOne', text: 'firstOne', isChecked: false\r\n                            },\r\n                            'secondOne': {\r\n                                id: 'secondOne', text: 'secondOne', isChecked: true\r\n                            }\r\n                        }\r\n                    },\r\n                    'check-2': {\r\n                        id: 'check-2',\r\n                        name: 'checklist-2',\r\n                        list: {\r\n                            'firstOne': { id: 'firstOne', text: 'firstOne', isChecked: true }, 'secondOne': { id: 'secondOne', text: 'secondOne', isChecked: false }\r\n                        }\r\n                    }\r\n                },\r\n                cardCover: \"#f9af4d\",\r\n                labels: [\"#ab4ae0\",]\r\n            },\r\n            'card-5': {\r\n                id: 'card-5',\r\n                title: 'Finish house chors',\r\n                desc: 'Click here to change the description',\r\n                isWatched: true,\r\n                dueDate: \"Sun Dec 27 2020\",\r\n                checklist: {\r\n                    'check-1': {\r\n                        id: 'check-1',\r\n                        name: 'checklist-1',\r\n                        list: {\r\n                            'firstOne': {\r\n                                id: 'firstOne', text: 'Clean the windows', isChecked: false\r\n                            },\r\n                            'secondOne': {\r\n                                id: 'secondOne', text: 'Vaccum clean', isChecked: true\r\n                            }\r\n                        }\r\n                    },\r\n                    'check-2': {\r\n                        id: 'check-2',\r\n                        name: 'checklist-2',\r\n                        list: {\r\n                            'firstOne': { id: 'firstOne', text: 'firstOne', isChecked: true }, 'secondOne': { id: 'secondOne', text: 'secondOne', isChecked: true }\r\n                        }\r\n                    }\r\n                },\r\n                cardCover: \"#ffff51\",\r\n                labels: [\"#3874ed\",]\r\n            },\r\n            'card-6': {\r\n                id: 'card-6',\r\n                title: 'Finish adding demo data',\r\n                desc: 'Add demo data to all cards',\r\n                isWatched: true,\r\n                dueDate: \"Sun Dec 27 2020\",\r\n                checklist: {\r\n                    'check-1': {\r\n                        id: 'check-1',\r\n                        name: 'checklist-1',\r\n                        list: {\r\n                            'firstOne': {\r\n                                id: 'firstOne', text: 'this is demo checklist item', isChecked: false\r\n                            },\r\n                            'secondOne': {\r\n                                id: 'secondOne', text: 'this is another demo checklist item', isChecked: true\r\n                            }\r\n                        }\r\n                    },\r\n                    'check-2': {\r\n                        id: 'check-2',\r\n                        name: 'checklist-2',\r\n                        list: {\r\n                            'firstOne': { id: 'firstOne', text: 'firstOne', isChecked: true },\r\n                            'secondOne': { id: 'secondOne', text: 'secondOne', isChecked: true }\r\n                        }\r\n                    }\r\n                },\r\n                cardCover: \"#f9af4d\",\r\n                labels: [\"#e04a4a\",]\r\n            },\r\n            'card-7': {\r\n                id: 'card-7',\r\n                title: 'Demo card',\r\n                desc: 'Click to change description',\r\n                isWatched: true,\r\n                dueDate: \"Sun Dec 27 2020\",\r\n                checklist: {\r\n                    'check-1': {\r\n                        id: 'check-1',\r\n                        name: 'checklist-1',\r\n                        list: {\r\n                            'firstOne': { id: 'firstOne', text: 'firstOne', isChecked: true }, 'secondOne': { id: 'secondOne', text: 'secondOne', isChecked: true }\r\n                        }\r\n                    },\r\n\r\n                },\r\n                cardCover: \"#4ae06d\",\r\n                labels: [\"#4ae06d\",]\r\n            },\r\n            'card-8': {\r\n                id: 'card-8',\r\n                title: 'Get the kids from school',\r\n                desc: 'Click here to change card description',\r\n                isWatched: true,\r\n                dueDate: \"Sun Dec 27 2020\",\r\n                checklist: {\r\n                    'check-1': {\r\n                        id: 'check-1',\r\n                        name: 'checklist-1',\r\n                        list: {\r\n                            'firstOne': {\r\n                                id: 'firstOne', text: 'firstOne', isChecked: false\r\n                            },\r\n                            'secondOne': {\r\n                                id: 'secondOne', text: 'secondOne', isChecked: true\r\n                            }\r\n                        }\r\n                    },\r\n                    'check-2': {\r\n                        id: 'check-2',\r\n                        name: 'checklist-2',\r\n                        list: {\r\n                            'firstOne': { id: 'firstOne', text: 'firstOne', isChecked: true }, 'secondOne': { id: 'secondOne', text: 'secondOne', isChecked: true }\r\n                        }\r\n                    }\r\n                },\r\n                cardCover: \"#f9af4d\",\r\n                labels: [\"#ab4ae0\",]\r\n            },\r\n            'card-9': {\r\n                id: 'card-9',\r\n                title: 'Learn JWT',\r\n                desc: 'Click here to change card description',\r\n                isWatched: true,\r\n                dueDate: \"Sun Dec 27 2020\",\r\n                checklist: {\r\n                    'check-1': {\r\n                        id: 'check-1',\r\n                        name: 'checklist-1',\r\n                        list: {\r\n                            'firstOne': {\r\n                                id: 'firstOne', text: 'firstOne', isChecked: false\r\n                            },\r\n                            'secondOne': {\r\n                                id: 'secondOne', text: 'secondOne', isChecked: true\r\n                            }\r\n                        }\r\n                    },\r\n                    'check-2': {\r\n                        id: 'check-2',\r\n                        name: 'checklist-2',\r\n                        list: {\r\n                            'firstOne': { id: 'firstOne', text: 'firstOne', isChecked: true }, 'secondOne': { id: 'secondOne', text: 'secondOne', isChecked: true }\r\n                        }\r\n                    }\r\n                },\r\n                cardCover: \"#4ae06d\",\r\n                labels: [\"#ffff51\"]\r\n            },\r\n            'card-10': {\r\n                id: 'card-10',\r\n                title: 'New demo card',\r\n                desc: 'Click here to change card description',\r\n                isWatched: true,\r\n                dueDate: \"Sun Dec 27 2020\",\r\n                checklist: {\r\n                    'check-1': {\r\n                        id: 'check-1',\r\n                        name: 'checklist-1',\r\n                        list: {\r\n                            'firstOne': {\r\n                                id: 'firstOne', text: 'firstOne', isChecked: false\r\n                            },\r\n                            'secondOne': {\r\n                                id: 'secondOne', text: 'secondOne', isChecked: true\r\n                            }\r\n                        }\r\n                    },\r\n                    'check-2': {\r\n                        id: 'check-2',\r\n                        name: 'checklist-2',\r\n                        list: {\r\n                            'firstOne': { id: 'firstOne', text: 'firstOne', isChecked: false }, 'secondOne': { id: 'secondOne', text: 'secondOne', isChecked: false }\r\n                        }\r\n                    }\r\n                },\r\n                cardCover: \"#3874ed\",\r\n                labels: [\"#ffff51\"]\r\n            },\r\n            'card-11': {\r\n                id: 'card-11',\r\n                title: 'Get food for the cats',\r\n                desc: 'Click here to change card description',\r\n                isWatched: true,\r\n                dueDate: \"Sun Dec 27 2020\",\r\n                checklist: {\r\n                    'check-1': {\r\n                        id: 'check-1',\r\n                        name: 'checklist-1',\r\n                        list: {\r\n                            'firstOne': {\r\n                                id: 'firstOne', text: 'firstOne', isChecked: false\r\n                            },\r\n                            'secondOne': {\r\n                                id: 'secondOne', text: 'secondOne', isChecked: true\r\n                            }\r\n                        }\r\n                    },\r\n                    'check-2': {\r\n                        id: 'check-2',\r\n                        name: 'checklist-2',\r\n                        list: {\r\n                            'firstOne': { id: 'firstOne', text: 'firstOne', isChecked: true }, 'secondOne': { id: 'secondOne', text: 'secondOne', isChecked: true }\r\n                        }\r\n                    }\r\n                },\r\n                cardCover: \"#e04a4a\",\r\n                labels: [\"#3874ed\",]\r\n            },\r\n            'card-12': {\r\n                id: 'card-12',\r\n                title: 'Get food for the dogs',\r\n                desc: 'Click here to change card description',\r\n                isWatched: true,\r\n                dueDate: \"Sun Dec 27 2020\",\r\n                checklist: {\r\n                    'check-1': {\r\n                        id: 'check-1',\r\n                        name: 'checklist-1',\r\n                        list: {\r\n                            'firstOne': {\r\n                                id: 'firstOne', text: 'firstOne', isChecked: false\r\n                            },\r\n                            'secondOne': {\r\n                                id: 'secondOne', text: 'secondOne', isChecked: true\r\n                            }\r\n                        }\r\n                    },\r\n                    'check-2': {\r\n                        id: 'check-2',\r\n                        name: 'checklist-2',\r\n                        list: {\r\n                            'firstOne': { id: 'firstOne', text: 'firstOne', isChecked: true }, 'secondOne': { id: 'secondOne', text: 'secondOne', isChecked: true }\r\n                        }\r\n                    }\r\n                },\r\n                cardCover: \"#ab4ae0\",\r\n                labels: [\"#e04a4a\", \"#4ae06d\", \"#ab4ae0\", \"#f9af4d\", \"#3874ed\", \"#ffff51\"]\r\n            },\r\n        },\r\n        lists: {\r\n            'list-1': {\r\n                id: 'list-1',\r\n                title: 'todo',\r\n                cardIds: ['card-1-id', 'card-2', 'card-3', 'card-4',]\r\n            },\r\n            'list-2': {\r\n                id: 'list-2',\r\n                title: 'in progress',\r\n                cardIds: ['card-5', 'card-6', 'card-7', 'card-8',]\r\n            },\r\n            'list-3': {\r\n                id: 'list-3',\r\n                title: 'done',\r\n                cardIds: ['card-9', 'card-10', 'card-11', 'card-12',]\r\n            },\r\n        },\r\n        listOrder: ['list-1', 'list-2', 'list-3'],\r\n        backgroundImg: 'lake',\r\n        createdAt: new Date().toLocaleDateString()\r\n    },\r\n    'board-2': {\r\n        id: 'board-2',\r\n        name: 'Eyal\\'s Board',\r\n        isFav: false,\r\n        cards: {\r\n            'card-16': {\r\n                id: 'card-16',\r\n                title: 'card-title-1',\r\n                desc: 'card-desc-1',\r\n                isWatched: true,\r\n                dueDate: \"Sun Dec 27 2020\",\r\n                checklist: {\r\n                    'check-1': {\r\n                        id: 'check-1',\r\n                        name: 'checklist-1',\r\n                        list: {\r\n                            'firstOne': {\r\n                                id: 'firstOne', text: 'firstOne', isChecked: false\r\n                            },\r\n                            'secondOne': {\r\n                                id: 'secondOne', text: 'secondOne', isChecked: true\r\n                            }\r\n                        }\r\n                    },\r\n                    'check-2': {\r\n                        id: 'check-2',\r\n                        name: 'checklist-2',\r\n                        list: {\r\n                            'firstOne': { id: 'firstOne', text: 'firstOne', isChecked: true }, 'secondOne': { id: 'secondOne', text: 'secondOne', isChecked: true }\r\n                        }\r\n                    }\r\n                },\r\n                cardCover: \"#ab4ae0\",\r\n                labels: [\"#e04a4a\", \"#4ae06d\", \"#ab4ae0\", \"#f9af4d\", \"#3874ed\", \"#ffff51\"]\r\n            },\r\n            'card-26': {\r\n                id: 'card-26',\r\n                title: 'card-title-1',\r\n                desc: 'card-desc-1',\r\n                isWatched: true,\r\n                dueDate: \"Sun Dec 27 2020\",\r\n                checklist: {\r\n                    'check-1': {\r\n                        id: 'check-1',\r\n                        name: 'checklist-1',\r\n                        list: {\r\n                            'firstOne': {\r\n                                id: 'firstOne', text: 'firstOne', isChecked: false\r\n                            },\r\n                            'secondOne': {\r\n                                id: 'secondOne', text: 'secondOne', isChecked: true\r\n                            }\r\n                        }\r\n                    },\r\n                    'check-2': {\r\n                        id: 'check-2',\r\n                        name: 'checklist-2',\r\n                        list: {\r\n                            'firstOne': { id: 'firstOne', text: 'firstOne', isChecked: true }, 'secondOne': { id: 'secondOne', text: 'secondOne', isChecked: true }\r\n                        }\r\n                    }\r\n                },\r\n                cardCover: \"#ab4ae0\",\r\n                labels: [\"#e04a4a\", \"#4ae06d\", \"#ab4ae0\", \"#f9af4d\", \"#3874ed\", \"#ffff51\"]\r\n            },\r\n            'card-36': {\r\n                id: 'card-36',\r\n                title: 'card-title-1',\r\n                desc: 'card-desc-1',\r\n                isWatched: true,\r\n                dueDate: \"Sun Dec 27 2020\",\r\n                checklist: {\r\n                    'check-1': {\r\n                        id: 'check-1',\r\n                        name: 'checklist-1',\r\n                        list: {\r\n                            'firstOne': {\r\n                                id: 'firstOne', text: 'firstOne', isChecked: false\r\n                            },\r\n                            'secondOne': {\r\n                                id: 'secondOne', text: 'secondOne', isChecked: true\r\n                            }\r\n                        }\r\n                    },\r\n                    'check-2': {\r\n                        id: 'check-2',\r\n                        name: 'checklist-2',\r\n                        list: {\r\n                            'firstOne': { id: 'firstOne', text: 'firstOne', isChecked: true }, 'secondOne': { id: 'secondOne', text: 'secondOne', isChecked: true }\r\n                        }\r\n                    }\r\n                },\r\n                cardCover: \"#ab4ae0\",\r\n                labels: [\"#e04a4a\", \"#4ae06d\", \"#ab4ae0\", \"#f9af4d\", \"#3874ed\", \"#ffff51\"]\r\n            },\r\n            'card-46': {\r\n                id: 'card-46',\r\n                title: 'card-title-1',\r\n                desc: 'card-desc-1',\r\n                isWatched: true,\r\n                dueDate: \"Sun Dec 27 2020\",\r\n                checklist: {\r\n                    'check-1': {\r\n                        id: 'check-1',\r\n                        name: 'checklist-1',\r\n                        list: {\r\n                            'firstOne': {\r\n                                id: 'firstOne', text: 'firstOne', isChecked: false\r\n                            },\r\n                            'secondOne': {\r\n                                id: 'secondOne', text: 'secondOne', isChecked: true\r\n                            }\r\n                        }\r\n                    },\r\n                    'check-2': {\r\n                        id: 'check-2',\r\n                        name: 'checklist-2',\r\n                        list: {\r\n                            'firstOne': { id: 'firstOne', text: 'firstOne', isChecked: true }, 'secondOne': { id: 'secondOne', text: 'secondOne', isChecked: false }\r\n                        }\r\n                    }\r\n                },\r\n                cardCover: \"#ab4ae0\",\r\n                labels: [\"#e04a4a\", \"#4ae06d\", \"#ab4ae0\", \"#f9af4d\", \"#3874ed\", \"#ffff51\"]\r\n            },\r\n            'card-57': {\r\n                id: 'card-57',\r\n                title: 'card-title-1',\r\n                desc: 'card-desc-1',\r\n                isWatched: true,\r\n                dueDate: \"Sun Dec 27 2020\",\r\n                checklist: {\r\n                    'check-1': {\r\n                        id: 'check-1',\r\n                        name: 'checklist-1',\r\n                        list: {\r\n                            'firstOne': {\r\n                                id: 'firstOne', text: 'firstOne', isChecked: false\r\n                            },\r\n                            'secondOne': {\r\n                                id: 'secondOne', text: 'secondOne', isChecked: true\r\n                            }\r\n                        }\r\n                    },\r\n                    'check-2': {\r\n                        id: 'check-2',\r\n                        name: 'checklist-2',\r\n                        list: {\r\n                            'firstOne': { id: 'firstOne', text: 'firstOne', isChecked: false }, 'secondOne': { id: 'secondOne', text: 'secondOne', isChecked: true }\r\n                        }\r\n                    }\r\n                },\r\n                cardCover: \"#ab4ae0\",\r\n                labels: [\"#e04a4a\", \"#4ae06d\", \"#ab4ae0\", \"#f9af4d\", \"#3874ed\", \"#ffff51\"]\r\n            },\r\n            'card-67': {\r\n                id: 'card-67',\r\n                title: 'card-title-1',\r\n                desc: 'card-desc-1',\r\n                isWatched: true,\r\n                dueDate: \"Sun Dec 27 2020\",\r\n                checklist: {\r\n                    'check-1': {\r\n                        id: 'check-1',\r\n                        name: 'checklist-1',\r\n                        list: {\r\n                            'firstOne': {\r\n                                id: 'firstOne', text: 'firstOne', isChecked: false\r\n                            },\r\n                            'secondOne': {\r\n                                id: 'secondOne', text: 'secondOne', isChecked: true\r\n                            }\r\n                        }\r\n                    },\r\n                    'check-2': {\r\n                        id: 'check-2',\r\n                        name: 'checklist-2',\r\n                        list: {\r\n                            'firstOne': { id: 'firstOne', text: 'firstOne', isChecked: true }, 'secondOne': { id: 'secondOne', text: 'secondOne', isChecked: true }\r\n                        }\r\n                    }\r\n                },\r\n                cardCover: \"#ab4ae0\",\r\n                labels: [\"#e04a4a\", \"#4ae06d\", \"#ab4ae0\", \"#f9af4d\", \"#3874ed\", \"#ffff51\"]\r\n            },\r\n            'card-77': {\r\n                id: 'card-77',\r\n                title: 'card-title-1',\r\n                desc: 'card-desc-1',\r\n                isWatched: true,\r\n                dueDate: \"Sun Dec 27 2020\",\r\n                checklist: {\r\n                    'check-1': {\r\n                        id: 'check-1',\r\n                        name: 'checklist-1',\r\n                        list: {\r\n                            'firstOne': {\r\n                                id: 'firstOne', text: 'firstOne', isChecked: false\r\n                            },\r\n                            'secondOne': {\r\n                                id: 'secondOne', text: 'secondOne', isChecked: true\r\n                            }\r\n                        }\r\n                    },\r\n                    'check-2': {\r\n                        id: 'check-2',\r\n                        name: 'checklist-2',\r\n                        list: {\r\n                            'firstOne': { id: 'firstOne', text: 'firstOne', isChecked: true }, 'secondOne': { id: 'secondOne', text: 'secondOne', isChecked: true }\r\n                        }\r\n                    }\r\n                },\r\n                cardCover: \"#ab4ae0\",\r\n                labels: [\"#e04a4a\", \"#4ae06d\", \"#ab4ae0\", \"#f9af4d\", \"#3874ed\", \"#ffff51\"]\r\n            },\r\n            'card-87': {\r\n                id: 'card-87',\r\n                title: 'card-title-1',\r\n                desc: 'card-desc-1',\r\n                isWatched: true,\r\n                dueDate: \"Sun Dec 27 2020\",\r\n                checklist: {\r\n                    'check-1': {\r\n                        id: 'check-1',\r\n                        name: 'checklist-1',\r\n                        list: {\r\n                            'firstOne': {\r\n                                id: 'firstOne', text: 'firstOne', isChecked: false\r\n                            },\r\n                            'secondOne': {\r\n                                id: 'secondOne', text: 'secondOne', isChecked: true\r\n                            }\r\n                        }\r\n                    },\r\n                    'check-2': {\r\n                        id: 'check-2',\r\n                        name: 'checklist-2',\r\n                        list: {\r\n                            'firstOne': { id: 'firstOne', text: 'firstOne', isChecked: true }, 'secondOne': { id: 'secondOne', text: 'secondOne', isChecked: true }\r\n                        }\r\n                    }\r\n                },\r\n                cardCover: \"#ab4ae0\",\r\n                labels: [\"#e04a4a\", \"#4ae06d\", \"#ab4ae0\", \"#f9af4d\", \"#3874ed\", \"#ffff51\"]\r\n            },\r\n        },\r\n        lists: {\r\n            'list-13': {\r\n                id: 'list-13',\r\n                title: 'todo2',\r\n                cardIds: ['card-16', 'card-26', 'card-36', 'card-46',]\r\n            },\r\n            'list-23': {\r\n                id: 'list-23',\r\n                title: 'in progress2',\r\n                cardIds: ['card-57', 'card-67', 'card-77', 'card-87',]\r\n            },\r\n        },\r\n        listOrder: ['list-13', 'list-23'],\r\n        backgroundImg: 'lake',\r\n        createdAt: new Date().toLocaleDateString()\r\n\r\n    },\r\n};\r\n\r\n\r\n \r\n","import UTILS from '../../service/utils'\r\nimport boards from '../../data/boards'\r\nvar initialState = UTILS.loadFromStorage('mainStore')\r\nif (!initialState || !initialState.boards['board-1'].cards.hasOwnProperty('card-1-id'))\r\n\r\n    initialState = {\r\n        boards: boards,\r\n        favBoards: [],\r\n        activeBoard: '',\r\n        isCardDetailShown: false,\r\n        isBgSideOpen: false\r\n    };\r\n\r\nexport default function (state = initialState, action) {\r\n    switch (action.type) {\r\n        case 'SET_STATE':\r\n            return {\r\n                state: action.state\r\n            };\r\n        case 'UPDATE_LIST':\r\n            return {\r\n                ...state,\r\n                boards: {\r\n                    ...state.boards,\r\n                    [action.data.currBoard.id]: {\r\n                        ...action.data.currBoard,\r\n                        lists: {\r\n                            ...state.boards[action.data.currBoard.id].lists,\r\n                            [action.data.updatedList.id]: action.data.updatedList\r\n                        }\r\n                    }\r\n                }\r\n            };\r\n        case 'UPDATE_LISTS':\r\n            return {\r\n                ...state,\r\n                boards: {\r\n                    ...state.boards,\r\n                    [action.data.currBoard.id]: {\r\n                        ...action.data.currBoard,\r\n                        lists: {\r\n                            ...state.boards[action.data.currBoard.id].lists,\r\n                            [action.data.newStartList.id]: action.data.newStartList,\r\n                            [action.data.newFinishList.id]: action.data.newFinishList,\r\n\r\n                        }\r\n                    }\r\n                }\r\n            };\r\n        case 'UPDATE_LISTS_ORDER':\r\n            return {\r\n                ...state,\r\n                boards: {\r\n                    ...state.boards,\r\n                    [action.data.currBoard.id]: {\r\n                        ...action.data.currBoard,\r\n                        listOrder: [...action.data.newListOrder]\r\n                    }\r\n                }\r\n            };\r\n        case 'CREATE_BOARD':\r\n            return {\r\n                ...state,\r\n                boards: {\r\n                    ...state.boards,\r\n                    [action.data.newBoard.id]: {\r\n                        ...action.data.newBoard,\r\n                    },\r\n                },\r\n            };\r\n        case 'DELETE_BOARD':\r\n            const newBoards = state.boards\r\n            delete newBoards[action.data.id]\r\n            return {\r\n                ...state,\r\n                boards: {\r\n                    ...newBoards,\r\n                },\r\n            };\r\n        case 'CHANGE_BOARD_NAME':\r\n            return {\r\n                ...state,\r\n                boards: {\r\n                    ...state.boards,\r\n                    [action.data.currBoard.id]: {\r\n                        ...action.data.currBoard,\r\n                        name: action.data.boardName\r\n                    },\r\n                },\r\n            };\r\n        case 'CREATE_LIST':\r\n            return {\r\n                ...state,\r\n                boards: {\r\n                    ...state.boards,\r\n                    [action.data.currBoard]: {\r\n                        ...state.boards[action.data.currBoard],\r\n                        lists: {\r\n                            ...state.boards[action.data.currBoard].lists,\r\n                            [action.data.newList.id]: action.data.newList,\r\n                        },\r\n                        listOrder: [...state.boards[action.data.currBoard].listOrder, action.data.newList.id]\r\n                    },\r\n                },\r\n            };\r\n        case 'DELETE_LIST':\r\n            return {\r\n                ...state,\r\n                boards: {\r\n                    ...state.boards,\r\n                    [action.data.currBoard.id]: {\r\n                        ...state.boards[action.data.currBoard.id],\r\n                        lists: {\r\n                            ...action.data.newLists\r\n                        },\r\n                        listOrder: action.data.newListOrder\r\n                    },\r\n                },\r\n            };\r\n        case 'MOVE_LIST':\r\n            return {\r\n                ...state,\r\n                boards: {\r\n                    ...state.boards,\r\n                    [action.data.moveToBoardId]: {\r\n                        ...state.boards[action.data.moveToBoardId],\r\n                        cards: {\r\n                            ...state.boards[action.data.moveToBoardId].cards,\r\n                            ...action.data.currListCards\r\n                        },\r\n                        lists: {\r\n                            ...state.boards[action.data.moveToBoardId].lists,\r\n                            [action.data.listToMove.id]: {\r\n                                ...action.data.listToMove\r\n                            }\r\n                        },\r\n                        listOrder: [...state.boards[action.data.moveToBoardId].listOrder, action.data.listToMove.id]\r\n                    },\r\n\r\n                },\r\n            };\r\n        case 'COPY_LIST':\r\n            return {\r\n                ...state,\r\n                boards: {\r\n                    ...state.boards,\r\n                    [action.data.currBoard.id]: {\r\n                        ...state.boards[action.data.currBoard.id],\r\n                        cards: {\r\n                            ...state.boards[action.data.currBoard.id].cards,\r\n                            ...action.data.copiedCards\r\n                        },\r\n                        lists: {\r\n                            ...state.boards[action.data.currBoard.id].lists,\r\n                            [action.data.copiedList.id]: {\r\n                                ...action.data.copiedList\r\n                            }\r\n                        },\r\n                        listOrder: action.data.newListOrder\r\n                    },\r\n\r\n                },\r\n            };\r\n        case 'CHANGE_LIST_NANE':\r\n            return {\r\n                ...state,\r\n                boards: {\r\n                    ...state.boards,\r\n                    [action.data.currBoard.id]: {\r\n                        ...state.boards[action.data.currBoard.id],\r\n                        lists: {\r\n                            ...state.boards[action.data.currBoard.id].lists,\r\n                            [action.data.currList.id]: {\r\n                                ...action.data.currList\r\n                            }\r\n                        },\r\n\r\n                    },\r\n                },\r\n            };\r\n        case 'CHANGE_BOARD_BG':\r\n            return {\r\n                ...state,\r\n                boards: {\r\n                    ...state.boards,\r\n                    [action.data.currBoard.id]: {\r\n                        ...state.boards[action.data.currBoard.id],\r\n                        backgroundImg: action.data.bgName,\r\n                    }\r\n                }\r\n            };\r\n\r\n        case 'SET_ACTIVE_BOARD':\r\n            return {\r\n                ...state,\r\n                activeBoard: action.activeBoard.id\r\n            };\r\n        case 'CREATE_CARD':\r\n            return {\r\n                ...state,\r\n                boards: {\r\n                    ...state.boards,\r\n                    [action.data.currBoard.id]: {\r\n                        ...state.boards[action.data.currBoard.id],\r\n                        cards: {\r\n                            ...state.boards[action.data.currBoard.id].cards,\r\n                            [action.data.newCard.id]: action.data.newCard,\r\n                        },\r\n                        lists: {\r\n                            ...state.boards[action.data.currBoard.id].lists,\r\n                            [action.data.currList.id]: {\r\n                                ...state.boards[action.data.currBoard.id].lists[action.data.currList.id],\r\n                                cardIds: [\r\n                                    ...state.boards[action.data.currBoard.id].lists[action.data.currList.id].cardIds, action.data.newCard.id\r\n                                ]\r\n                            }\r\n                        }\r\n\r\n                    }\r\n                }\r\n            };\r\n        case 'COPY_CARD':\r\n            return {\r\n                ...state,\r\n                boards: {\r\n                    ...state.boards,\r\n                    [action.data.currBoard.id]: {\r\n                        ...state.boards[action.data.currBoard.id],\r\n                        cards: {\r\n                            ...state.boards[action.data.currBoard.id].cards,\r\n                            [action.data.copiedCard.id]: action.data.copiedCard\r\n                        },\r\n                        lists: {\r\n                            ...state.boards[action.data.currBoard.id].lists,\r\n                            [action.data.copyToListID]: {\r\n                                ...state.boards[action.data.currBoard.id].lists[action.data.copyToListID],\r\n                                cardIds: [...state.boards[action.data.currBoard.id].lists[action.data.copyToListID].cardIds, action.data.copiedCard.id]\r\n                            }\r\n                        },\r\n                    }\r\n                }\r\n            };\r\n        case 'SET_CARD_TITLE':\r\n            return {\r\n                ...state,\r\n                boards: {\r\n                    ...state.boards,\r\n                    [action.data.currBoard.id]: {\r\n                        ...state.boards[action.data.currBoard.id],\r\n                        cards: {\r\n                            ...state.boards[action.data.currBoard.id].cards,\r\n                            [action.data.currCard.id]: { ...action.data.currCard, title: action.data.cardTitle },\r\n                        },\r\n\r\n                    }\r\n                }\r\n            };\r\n        case 'MOVE_CARD':\r\n            return {\r\n                ...state,\r\n                boards: {\r\n                    ...state.boards,\r\n                    [action.data.currBoard.id]: {\r\n                        ...state.boards[action.data.currBoard.id],\r\n                        lists: {\r\n                            ...state.boards[action.data.currBoard.id].lists,\r\n                            [action.data.currList.id]: {\r\n                                ...state.boards[action.data.currBoard.id].lists[action.data.currList.id],\r\n                                cardIds: state.boards[action.data.currBoard.id].lists[action.data.currList.id].cardIds.filter(cardId => cardId !== action.data.currCard.id)\r\n                            },\r\n                            [action.data.moveToListID]: {\r\n                                ...state.boards[action.data.currBoard.id].lists[action.data.moveToListID],\r\n                                cardIds: [...state.boards[action.data.currBoard.id].lists[action.data.moveToListID].cardIds, action.data.currCard.id]\r\n                            }\r\n                        },\r\n                    }\r\n                }\r\n            };\r\n        case 'DELETE_CARD':\r\n            return {\r\n                ...state,\r\n                boards: {\r\n                    ...state.boards,\r\n                    [action.data.currBoard.id]: {\r\n                        ...action.data.currBoard,\r\n                        lists: {\r\n                            ...action.data.currBoard.lists,\r\n                            [action.data.currList.id]: action.data.currList\r\n                        },\r\n                    }\r\n                }\r\n            };\r\n\r\n\r\n\r\n        case 'SET_DESC':\r\n            return {\r\n                ...state,\r\n                boards: {\r\n                    ...state.boards,\r\n                    [action.data.currBoard.id]: {\r\n                        ...action.data.currBoard,\r\n                        cards: {\r\n                            ...state.boards[action.data.currBoard.id].cards,\r\n                            [action.data.currCard.id]:\r\n                            {\r\n                                ...state.boards[action.data.currBoard.id].cards[action.data.currCard.id],\r\n                                desc: action.data.desc\r\n                            }\r\n                        },\r\n                    }\r\n                }\r\n            };\r\n\r\n        case 'SET_LABEL':\r\n            return {\r\n                ...state,\r\n                boards: {\r\n                    ...state.boards,\r\n                    [action.data.currBoard.id]: {\r\n                        ...state.boards[action.data.currBoard.id],\r\n                        cards: {\r\n                            ...state.boards[action.data.currBoard.id].cards,\r\n                            [action.data.currCard.id]:\r\n                            {\r\n                                ...state.boards[action.data.currBoard.id].cards[action.data.currCard.id],\r\n                                labels: [...state.boards[action.data.currBoard.id].cards[action.data.currCard.id].labels, action.data.labelColor]\r\n                            }\r\n                        },\r\n                    }\r\n                }\r\n            };\r\n        case 'UPDATE_LABELS':\r\n            return {\r\n                ...state,\r\n                boards: {\r\n                    ...state.boards,\r\n                    [action.data.currBoard.id]: {\r\n                        ...action.data.currBoard,\r\n                        cards: {\r\n                            ...state.boards[action.data.currBoard.id].cards,\r\n                            [action.data.currCard.id]:\r\n                            {\r\n                                ...state.boards[action.data.currBoard.id].cards[action.data.currCard.id],\r\n                                labels: action.data.newLabelList\r\n                            }\r\n                        },\r\n                    }\r\n                }\r\n            };\r\n\r\n        case 'TOGGLE_CARD_WATCH':\r\n            return {\r\n                ...state,\r\n                boards: {\r\n                    ...state.boards,\r\n                    [action.data.currBoard.id]: {\r\n                        ...action.data.currBoard,\r\n                        cards: {\r\n                            ...state.boards[action.data.currBoard.id].cards,\r\n                            [action.data.currCard.id]:\r\n                            {\r\n                                ...state.boards[action.data.currBoard.id].cards[action.data.currCard.id],\r\n                                isWatched: action.data.isWatched\r\n                            }\r\n                        },\r\n                    }\r\n                }\r\n            };\r\n        case 'TOGGLE_CHECK_ITEM':\r\n            const isItemChecked = state.boards[action.data.currBoard.id].cards[action.data.currCard.id].checklist[action.data.currCheckList.id].list[action.data.currItem.id].isChecked\r\n            return {\r\n                ...state,\r\n                boards: {\r\n                    ...state.boards,\r\n                    [action.data.currBoard.id]: {\r\n                        ...action.data.currBoard,\r\n                        cards: {\r\n                            ...state.boards[action.data.currBoard.id].cards,\r\n                            [action.data.currCard.id]:\r\n                            {\r\n                                ...state.boards[action.data.currBoard.id].cards[action.data.currCard.id],\r\n                                checklist: {\r\n                                    ...state.boards[action.data.currBoard.id].cards[action.data.currCard.id].checklist,\r\n                                    [action.data.currCheckList.id]: {\r\n                                        ...state.boards[action.data.currBoard.id].cards[action.data.currCard.id].checklist[action.data.currCheckList.id],\r\n                                        list: {\r\n                                            ...state.boards[action.data.currBoard.id].cards[action.data.currCard.id].checklist[action.data.currCheckList.id].list,\r\n                                            [action.data.currItem.id]: {\r\n                                                ...state.boards[action.data.currBoard.id].cards[action.data.currCard.id].checklist[action.data.currCheckList.id].list[action.data.currItem.id],\r\n                                                isChecked: !isItemChecked\r\n                                            }\r\n                                        },\r\n                                    }\r\n                                }\r\n                            },\r\n                        }\r\n                    }\r\n                },\r\n            }\r\n\r\n\r\n        case 'SET_DUE_DATE':\r\n            return {\r\n                ...state,\r\n                boards: {\r\n                    ...state.boards,\r\n                    [action.data.currBoard.id]: {\r\n                        ...action.data.currBoard,\r\n                        cards: {\r\n                            ...state.boards[action.data.currBoard.id].cards,\r\n                            [action.data.currCard.id]:\r\n                            {\r\n                                ...state.boards[action.data.currBoard.id].cards[action.data.currCard.id],\r\n                                dueDate: action.data.dueDate\r\n                            }\r\n                        },\r\n                    }\r\n                }\r\n            };\r\n\r\n\r\n        case 'CREATE_CHECKLIST':\r\n            return {\r\n                ...state,\r\n                boards: {\r\n                    ...state.boards,\r\n                    [action.data.currBoard.id]: {\r\n                        ...action.data.currBoard,\r\n                        cards: {\r\n                            ...state.boards[action.data.currBoard.id].cards,\r\n                            [action.data.currCard.id]:\r\n                            {\r\n                                ...state.boards[action.data.currBoard.id].cards[action.data.currCard.id],\r\n                                checklist: { ...state.boards[action.data.currBoard.id].cards[action.data.currCard.id].checklist, [action.data.currChecklist.id]: action.data.currChecklist }\r\n                            }\r\n                        },\r\n                    }\r\n                }\r\n            };\r\n        case 'ADD_CHECKLIST_ITEM':\r\n            return {\r\n                ...state,\r\n                boards: {\r\n                    ...state.boards,\r\n                    [action.data.currBoard.id]: {\r\n                        ...action.data.currBoard,\r\n                        cards: {\r\n                            ...state.boards[action.data.currBoard.id].cards,\r\n                            [action.data.currCard.id]:\r\n                            {\r\n                                ...state.boards[action.data.currBoard.id].cards[action.data.currCard.id],\r\n                                checklist: {\r\n                                    ...state.boards[action.data.currBoard.id].cards[action.data.currCard.id].checklist,\r\n                                    [action.data.currCheckList.id]: {\r\n                                        ...state.boards[action.data.currBoard.id].cards[action.data.currCard.id].checklist[action.data.currCheckList.id],\r\n                                        list: { ...state.boards[action.data.currBoard.id].cards[action.data.currCard.id].checklist[action.data.currCheckList.id].list, [action.data.newItem.id]: action.data.newItem }\r\n                                    }\r\n                                }\r\n                            }\r\n                        },\r\n                    }\r\n                }\r\n            };\r\n        case 'REMOVE_CHECKLIST_ITEM':\r\n            const newChecklistToSave = state.boards[action.data.currBoard.id].cards[action.data.currCard.id].checklist\r\n            [action.data.currCheckList.id]\r\n            delete newChecklistToSave.list[action.data.itemToRemove.id]\r\n\r\n            return {\r\n                ...state,\r\n                boards: {\r\n                    ...state.boards,\r\n                    [action.data.currBoard.id]: {\r\n                        ...action.data.currBoard,\r\n                        cards: {\r\n                            ...state.boards[action.data.currBoard.id].cards,\r\n                            [action.data.currCard.id]:\r\n                            {\r\n                                ...state.boards[action.data.currBoard.id].cards[action.data.currCard.id],\r\n                                checklist: {\r\n                                    ...state.boards[action.data.currBoard.id].cards[action.data.currCard.id].checklist,\r\n                                    [action.data.currCheckList.id]: newChecklistToSave\r\n                                }\r\n                            }\r\n                        },\r\n                    }\r\n                }\r\n            };\r\n\r\n        case 'REMOVE_CHECKLIST':\r\n            const newChecklist = state.boards[action.data.currBoard.id].cards[action.data.currCard.id].checklist\r\n            delete newChecklist[action.data.checkListToRemove.id]\r\n            return {\r\n                ...state,\r\n                boards: {\r\n                    ...state.boards,\r\n                    [action.data.currBoard.id]: {\r\n                        ...action.data.currBoard,\r\n                        cards: {\r\n                            ...state.boards[action.data.currBoard.id].cards,\r\n                            [action.data.currCard.id]:\r\n                            {\r\n                                ...state.boards[action.data.currBoard.id].cards[action.data.currCard.id],\r\n                                checklist: newChecklist\r\n                            }\r\n                        },\r\n                    }\r\n                }\r\n            };\r\n\r\n\r\n        case 'CARD_COVER':\r\n            return {\r\n                ...state,\r\n                boards: {\r\n                    ...state.boards,\r\n                    [action.data.currBoard.id]: {\r\n                        ...action.data.currBoard,\r\n                        cards: {\r\n                            ...state.boards[action.data.currBoard.id].cards,\r\n                            [action.data.currCard.id]:\r\n                                { ...state.boards[action.data.currBoard.id].cards[action.data.currCard.id], cardCover: action.data.color }\r\n                        },\r\n                    }\r\n                }\r\n            };\r\n\r\n\r\n\r\n        case 'UPDATE_CURR_LIST':\r\n            return {\r\n                ...state,\r\n                currListId: action.data\r\n            };\r\n        case 'TOGGLE_CARD_DETAILS':\r\n            return {\r\n                ...state,\r\n                isCardDetailShown: action.data\r\n            };\r\n        case 'TOGGLE_BG_SIDE':\r\n            return {\r\n                ...state,\r\n                isBgSideOpen: !state.isBgSideOpen\r\n            };\r\n        case 'TOGGLE_FAV_BOARD':\r\n            return {\r\n                ...state,\r\n                boards: {\r\n                    ...state.boards,\r\n                    [action.savedBoard.id]: {\r\n                        ...state.boards[action.savedBoard.id],\r\n                        isFav: !state.boards[action.savedBoard.id].isFav\r\n                    }\r\n                },\r\n                favBoards: [...state.favBoards, action.savedBoard.id]\r\n            };\r\n\r\n        case 'REMOVE_SAVED_BOARD':\r\n            const index = state.favBoards.findIndex((boardId) => boardId === action.boardToRemove.id)\r\n            state.favBoards.splice(index, 1)\r\n            const newFavBoards = state.favBoards\r\n            return {\r\n                ...state,\r\n                boards: {\r\n                    ...state.boards,\r\n                    [action.boardToRemove.id]: {\r\n                        ...state.boards[action.boardToRemove.id],\r\n                        isFav: !state.boards[action.boardToRemove.id].isFav\r\n                    }\r\n                },\r\n                favBoards: newFavBoards\r\n            }\r\n\r\n\r\n        case 'GET_STATE':\r\n            console.log('state:', state)\r\n            return {\r\n                ...state,\r\n\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}","import { combineReducers } from 'redux';\r\nimport boardReducer from './boardReducer'\r\n\r\n\r\nconst rootReducer = combineReducers({\r\n  mainStore: boardReducer,\r\n})\r\n\r\nexport default rootReducer;","\r\nimport { createStore, applyMiddleware, compose } from 'redux';\r\n\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './reducers';\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst Store = createStore(\r\n  rootReducer,\r\n  composeEnhancers(applyMiddleware(thunk))\r\n);\r\n\r\nexport default Store;\r\n","import history from './history';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport {HashRouter as Router } from 'react-router-dom';\r\nimport store from './store/store'\r\nimport { Provider } from 'react-redux'\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <React.StrictMode>\r\n      <Router history={history}>\r\n        <App />\r\n      </Router>\r\n    </React.StrictMode>\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}